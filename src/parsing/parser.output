Terminals unused in grammar

   SHORT_VAR_DECL
   INC
   DEC
   ELLIPSIS


State 23 conflicts: 1 shift/reduce
State 47 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 73 conflicts: 3 reduce/reduce
State 93 conflicts: 1 shift/reduce
State 111 conflicts: 2 shift/reduce
State 149 conflicts: 1 reduce/reduce


Grammar

    0 $accept: start $end

    1 start: top_level_declaration_list

    2 type: '(' type ')'
    3     | BOOL
    4     | INT
    5     | FLOAT32
    6     | RUNE
    7     | STRING
    8     | '*' type
    9     | FUNC function_signature
   10     | literal_type

   11 literal_type: IDENTIFIER
   12             | '[' array_length ']' type
   13             | '[' ']' type
   14             | STRUCT '{' struct_field_decls '}'
   15             | MAP '[' type ']' type

   16 array_length: INT_LITERAL

   17 function_signature: function_parameters function_result

   18 function_result: /* empty */
   19                | function_parameters
   20                | type

   21 function_parameters: '(' ')'
   22                    | '(' function_parameter_list ')'
   23                    | '(' function_parameter_list ',' ')'

   24 function_parameter_list: type
   25                        | identifier_list type
   26                        | type ',' function_parameter_list
   27                        | identifier_list type ',' function_parameter_list

   28 struct_field_decls: identifier_list type ';'
   29                   | identifier_list type ';' struct_field_decls

   30 block: '{' statement_list '}'

   31 top_level_declaration: declaration
   32                      | function_declaration

   33 top_level_declaration_list: top_level_declaration
   34                           | top_level_declaration ';' top_level_declaration_list

   35 function_declaration: FUNC IDENTIFIER function_signature block

   36 declaration: type_decl
   37            | var_decl

   38 type_decl: TYPE type_spec
   39          | TYPE '(' type_spec_list ')'

   40 type_spec: IDENTIFIER '=' type
   41          | IDENTIFIER type

   42 type_spec_list: type_spec ';'
   43               | type_spec ';' type_spec_list

   44 var_decl: VAR var_spec
   45         | VAR '(' var_spec_list ')'

   46 var_spec: identifier_list type
   47         | identifier_list type '=' expression_list
   48         | identifier_list '=' expression_list

   49 var_spec_list: var_spec ';'
   50              | var_spec ';' var_spec_list

   51 statement: simple_statement
   52          | if_statement
   53          | switch_statement
   54          | return_statement
   55          | BREAK
   56          | CONTINUE
   57          | for_statement
   58          | declaration

   59 simple_statement: /* empty */
   60                 | expression
   61                 | expression_list '=' expression_list

   62 statement_list: /* empty */
   63               | statement ';' statement_list

   64 if_statement: IF expression block
   65             | IF expression block ELSE if_statement
   66             | IF expression block ELSE block

   67 switch_statement: SWITCH expression '{' switch_clause_list '}'

   68 switch_clause: CASE expression_list ':' statement_list
   69              | DEFAULT ':' statement_list

   70 switch_clause_list: /* empty */
   71                   | switch_clause switch_clause_list

   72 return_statement: RETURN expression_list

   73 for_statement: for_condition_statement

   74 for_condition_statement: FOR simple_statement ';' expression ';' simple_statement block
   75                        | FOR expression block
   76                        | FOR block

   77 expression: primary_expression

   78 optional_expression: expression
   79                    | /* empty */

   80 operand: literal
   81        | IDENTIFIER
   82        | '(' expression ')'

   83 literal: basic_literal
   84        | composite_literal
   85        | FUNC function_signature block

   86 basic_literal: BOOL_LITERAL
   87              | INT_LITERAL
   88              | FLOAT_LITERAL
   89              | RUNE_LITERAL
   90              | STRING_LITERAL

   91 expression_list: expression
   92                | expression ',' expression_list

   93 composite_literal: literal_type '{' element_list '}'

   94 element_list: keyed_element
   95             | keyed_element ',' element_list

   96 keyed_element: IDENTIFIER ':' expression
   97              | expression

   98 primary_expression: operand
   99                   | type '(' expression ')'
  100                   | primary_expression '.' IDENTIFIER
  101                   | primary_expression '[' expression ']'
  102                   | primary_expression '[' optional_expression ':' optional_expression ']'
  103                   | primary_expression '[' optional_expression ':' expression ':' expression ']'
  104                   | primary_expression '(' expression_list ')'

  105 identifier_list: IDENTIFIER
  106                | IDENTIFIER ',' identifier_list


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 21 22 23 39 45 82 99 104
')' (41) 2 21 22 23 39 45 82 99 104
'*' (42) 8
',' (44) 23 26 27 92 95 106
'.' (46) 100
':' (58) 68 69 96 102 103
';' (59) 28 29 34 42 43 49 50 63 74
'=' (61) 40 47 48 61
'[' (91) 12 13 15 101 102 103
']' (93) 12 13 15 101 102 103
'{' (123) 14 30 67 93
'}' (125) 14 30 67 93
error (256)
BOOL (258) 3
INT (259) 4
FLOAT32 (260) 5
RUNE (261) 6
STRING (262) 7
STRUCT (263) 14
FUNC (264) 9 35 85
MAP (265) 15
TYPE (266) 38 39
VAR (267) 44 45
SHORT_VAR_DECL (268)
IF (269) 64 65 66
ELSE (270) 65 66
SWITCH (271) 67
CASE (272) 68
DEFAULT (273) 69
RETURN (274) 72
BREAK (275) 55
CONTINUE (276) 56
FOR (277) 74 75 76
INC (278)
DEC (279)
ELLIPSIS (280)
IDENTIFIER (281) 11 35 40 41 81 96 100 105 106
INT_LITERAL (282) 16 87
FLOAT_LITERAL (283) 88
BOOL_LITERAL (284) 86
RUNE_LITERAL (285) 89
STRING_LITERAL (286) 90


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
start (45)
    on left: 1, on right: 0
type (46)
    on left: 2 3 4 5 6 7 8 9 10, on right: 2 8 12 13 15 20 24 25 26
    27 28 29 40 41 46 47 99
literal_type (47)
    on left: 11 12 13 14 15, on right: 10 93
array_length (48)
    on left: 16, on right: 12
function_signature (49)
    on left: 17, on right: 9 35 85
function_result (50)
    on left: 18 19 20, on right: 17
function_parameters (51)
    on left: 21 22 23, on right: 17 19
function_parameter_list (52)
    on left: 24 25 26 27, on right: 22 23 26 27
struct_field_decls (53)
    on left: 28 29, on right: 14 29
block (54)
    on left: 30, on right: 35 64 65 66 74 75 76 85
top_level_declaration (55)
    on left: 31 32, on right: 33 34
top_level_declaration_list (56)
    on left: 33 34, on right: 1 34
function_declaration (57)
    on left: 35, on right: 32
declaration (58)
    on left: 36 37, on right: 31 58
type_decl (59)
    on left: 38 39, on right: 36
type_spec (60)
    on left: 40 41, on right: 38 42 43
type_spec_list (61)
    on left: 42 43, on right: 39 43
var_decl (62)
    on left: 44 45, on right: 37
var_spec (63)
    on left: 46 47 48, on right: 44 49 50
var_spec_list (64)
    on left: 49 50, on right: 45 50
statement (65)
    on left: 51 52 53 54 55 56 57 58, on right: 63
simple_statement (66)
    on left: 59 60 61, on right: 51 74
statement_list (67)
    on left: 62 63, on right: 30 63 68 69
if_statement (68)
    on left: 64 65 66, on right: 52 65
switch_statement (69)
    on left: 67, on right: 53
switch_clause (70)
    on left: 68 69, on right: 71
switch_clause_list (71)
    on left: 70 71, on right: 67 71
return_statement (72)
    on left: 72, on right: 54
for_statement (73)
    on left: 73, on right: 57
for_condition_statement (74)
    on left: 74 75 76, on right: 73
expression (75)
    on left: 77, on right: 60 64 65 66 67 74 75 78 82 91 92 96 97 99
    101 103
optional_expression (76)
    on left: 78 79, on right: 102 103
operand (77)
    on left: 80 81 82, on right: 98
literal (78)
    on left: 83 84 85, on right: 80
basic_literal (79)
    on left: 86 87 88 89 90, on right: 83
expression_list (80)
    on left: 91 92, on right: 47 48 61 68 72 92 104
composite_literal (81)
    on left: 93, on right: 84
element_list (82)
    on left: 94 95, on right: 93 95
keyed_element (83)
    on left: 96 97, on right: 94 95
primary_expression (84)
    on left: 98 99 100 101 102 103 104, on right: 77 100 101 102 103
    104
identifier_list (85)
    on left: 105 106, on right: 25 27 28 29 46 47 48 106


State 0

    0 $accept: . start $end

    FUNC  shift, and go to state 1
    TYPE  shift, and go to state 2
    VAR   shift, and go to state 3

    start                       go to state 4
    top_level_declaration       go to state 5
    top_level_declaration_list  go to state 6
    function_declaration        go to state 7
    declaration                 go to state 8
    type_decl                   go to state 9
    var_decl                    go to state 10


State 1

   35 function_declaration: FUNC . IDENTIFIER function_signature block

    IDENTIFIER  shift, and go to state 11


State 2

   38 type_decl: TYPE . type_spec
   39          | TYPE . '(' type_spec_list ')'

    IDENTIFIER  shift, and go to state 12
    '('         shift, and go to state 13

    type_spec  go to state 14


State 3

   44 var_decl: VAR . var_spec
   45         | VAR . '(' var_spec_list ')'

    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    var_spec         go to state 17
    identifier_list  go to state 18


State 4

    0 $accept: start . $end

    $end  shift, and go to state 19


State 5

   33 top_level_declaration_list: top_level_declaration .
   34                           | top_level_declaration . ';' top_level_declaration_list

    ';'  shift, and go to state 20

    $default  reduce using rule 33 (top_level_declaration_list)


State 6

    1 start: top_level_declaration_list .

    $default  reduce using rule 1 (start)


State 7

   32 top_level_declaration: function_declaration .

    $default  reduce using rule 32 (top_level_declaration)


State 8

   31 top_level_declaration: declaration .

    $default  reduce using rule 31 (top_level_declaration)


State 9

   36 declaration: type_decl .

    $default  reduce using rule 36 (declaration)


State 10

   37 declaration: var_decl .

    $default  reduce using rule 37 (declaration)


State 11

   35 function_declaration: FUNC IDENTIFIER . function_signature block

    '('  shift, and go to state 21

    function_signature   go to state 22
    function_parameters  go to state 23


State 12

   40 type_spec: IDENTIFIER . '=' type
   41          | IDENTIFIER . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35
    '='         shift, and go to state 36

    type          go to state 37
    literal_type  go to state 38


State 13

   39 type_decl: TYPE '(' . type_spec_list ')'

    IDENTIFIER  shift, and go to state 12

    type_spec       go to state 39
    type_spec_list  go to state 40


State 14

   38 type_decl: TYPE type_spec .

    $default  reduce using rule 38 (type_decl)


State 15

  105 identifier_list: IDENTIFIER .
  106                | IDENTIFIER . ',' identifier_list

    ','  shift, and go to state 41

    $default  reduce using rule 105 (identifier_list)


State 16

   45 var_decl: VAR '(' . var_spec_list ')'

    IDENTIFIER  shift, and go to state 15

    var_spec         go to state 42
    var_spec_list    go to state 43
    identifier_list  go to state 18


State 17

   44 var_decl: VAR var_spec .

    $default  reduce using rule 44 (var_decl)


State 18

   46 var_spec: identifier_list . type
   47         | identifier_list . type '=' expression_list
   48         | identifier_list . '=' expression_list

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35
    '='         shift, and go to state 44

    type          go to state 45
    literal_type  go to state 38


State 19

    0 $accept: start $end .

    $default  accept


State 20

   34 top_level_declaration_list: top_level_declaration ';' . top_level_declaration_list

    FUNC  shift, and go to state 1
    TYPE  shift, and go to state 2
    VAR   shift, and go to state 3

    top_level_declaration       go to state 5
    top_level_declaration_list  go to state 46
    function_declaration        go to state 7
    declaration                 go to state 8
    type_decl                   go to state 9
    var_decl                    go to state 10


State 21

   21 function_parameters: '(' . ')'
   22                    | '(' . function_parameter_list ')'
   23                    | '(' . function_parameter_list ',' ')'

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 47
    '('         shift, and go to state 33
    ')'         shift, and go to state 48
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type                     go to state 49
    literal_type             go to state 38
    function_parameter_list  go to state 50
    identifier_list          go to state 51


State 22

   35 function_declaration: FUNC IDENTIFIER function_signature . block

    '{'  shift, and go to state 52

    block  go to state 53


State 23

   17 function_signature: function_parameters . function_result

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 54
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    '('       [reduce using rule 18 (function_result)]
    $default  reduce using rule 18 (function_result)

    type                 go to state 55
    literal_type         go to state 38
    function_result      go to state 56
    function_parameters  go to state 57


State 24

    3 type: BOOL .

    $default  reduce using rule 3 (type)


State 25

    4 type: INT .

    $default  reduce using rule 4 (type)


State 26

    5 type: FLOAT32 .

    $default  reduce using rule 5 (type)


State 27

    6 type: RUNE .

    $default  reduce using rule 6 (type)


State 28

    7 type: STRING .

    $default  reduce using rule 7 (type)


State 29

   14 literal_type: STRUCT . '{' struct_field_decls '}'

    '{'  shift, and go to state 58


State 30

    9 type: FUNC . function_signature

    '('  shift, and go to state 21

    function_signature   go to state 59
    function_parameters  go to state 23


State 31

   15 literal_type: MAP . '[' type ']' type

    '['  shift, and go to state 60


State 32

   11 literal_type: IDENTIFIER .

    $default  reduce using rule 11 (literal_type)


State 33

    2 type: '(' . type ')'

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 61
    literal_type  go to state 38


State 34

    8 type: '*' . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 62
    literal_type  go to state 38


State 35

   12 literal_type: '[' . array_length ']' type
   13             | '[' . ']' type

    INT_LITERAL  shift, and go to state 63
    ']'          shift, and go to state 64

    array_length  go to state 65


State 36

   40 type_spec: IDENTIFIER '=' . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 66
    literal_type  go to state 38


State 37

   41 type_spec: IDENTIFIER type .

    $default  reduce using rule 41 (type_spec)


State 38

   10 type: literal_type .

    $default  reduce using rule 10 (type)


State 39

   42 type_spec_list: type_spec . ';'
   43               | type_spec . ';' type_spec_list

    ';'  shift, and go to state 67


State 40

   39 type_decl: TYPE '(' type_spec_list . ')'

    ')'  shift, and go to state 68


State 41

  106 identifier_list: IDENTIFIER ',' . identifier_list

    IDENTIFIER  shift, and go to state 15

    identifier_list  go to state 69


State 42

   49 var_spec_list: var_spec . ';'
   50              | var_spec . ';' var_spec_list

    ';'  shift, and go to state 70


State 43

   45 var_decl: VAR '(' var_spec_list . ')'

    ')'  shift, and go to state 71


State 44

   48 var_spec: identifier_list '=' . expression_list

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    type                go to state 80
    literal_type        go to state 81
    expression          go to state 82
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    expression_list     go to state 86
    composite_literal   go to state 87
    primary_expression  go to state 88


State 45

   46 var_spec: identifier_list type .
   47         | identifier_list type . '=' expression_list

    '='  shift, and go to state 89

    $default  reduce using rule 46 (var_spec)


State 46

   34 top_level_declaration_list: top_level_declaration ';' top_level_declaration_list .

    $default  reduce using rule 34 (top_level_declaration_list)


State 47

   11 literal_type: IDENTIFIER .
  105 identifier_list: IDENTIFIER .
  106                | IDENTIFIER . ',' identifier_list

    ','  shift, and go to state 41

    ')'       reduce using rule 11 (literal_type)
    ','       [reduce using rule 11 (literal_type)]
    $default  reduce using rule 105 (identifier_list)


State 48

   21 function_parameters: '(' ')' .

    $default  reduce using rule 21 (function_parameters)


State 49

   24 function_parameter_list: type .
   26                        | type . ',' function_parameter_list

    ','  shift, and go to state 90

    ','       [reduce using rule 24 (function_parameter_list)]
    $default  reduce using rule 24 (function_parameter_list)


State 50

   22 function_parameters: '(' function_parameter_list . ')'
   23                    | '(' function_parameter_list . ',' ')'

    ')'  shift, and go to state 91
    ','  shift, and go to state 92


State 51

   25 function_parameter_list: identifier_list . type
   27                        | identifier_list . type ',' function_parameter_list

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 93
    literal_type  go to state 38


State 52

   30 block: '{' . statement_list '}'

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    TYPE            shift, and go to state 2
    VAR             shift, and go to state 3
    IF              shift, and go to state 94
    SWITCH          shift, and go to state 95
    RETURN          shift, and go to state 96
    BREAK           shift, and go to state 97
    CONTINUE        shift, and go to state 98
    FOR             shift, and go to state 99
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    '}'       reduce using rule 62 (statement_list)
    $default  reduce using rule 59 (simple_statement)

    type                     go to state 80
    literal_type             go to state 81
    declaration              go to state 100
    type_decl                go to state 9
    var_decl                 go to state 10
    statement                go to state 101
    simple_statement         go to state 102
    statement_list           go to state 103
    if_statement             go to state 104
    switch_statement         go to state 105
    return_statement         go to state 106
    for_statement            go to state 107
    for_condition_statement  go to state 108
    expression               go to state 109
    operand                  go to state 83
    literal                  go to state 84
    basic_literal            go to state 85
    expression_list          go to state 110
    composite_literal        go to state 87
    primary_expression       go to state 88


State 53

   35 function_declaration: FUNC IDENTIFIER function_signature block .

    $default  reduce using rule 35 (function_declaration)


State 54

    2 type: '(' . type ')'
   21 function_parameters: '(' . ')'
   22                    | '(' . function_parameter_list ')'
   23                    | '(' . function_parameter_list ',' ')'

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 47
    '('         shift, and go to state 33
    ')'         shift, and go to state 48
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type                     go to state 111
    literal_type             go to state 38
    function_parameter_list  go to state 50
    identifier_list          go to state 51


State 55

   20 function_result: type .

    $default  reduce using rule 20 (function_result)


State 56

   17 function_signature: function_parameters function_result .

    $default  reduce using rule 17 (function_signature)


State 57

   19 function_result: function_parameters .

    $default  reduce using rule 19 (function_result)


State 58

   14 literal_type: STRUCT '{' . struct_field_decls '}'

    IDENTIFIER  shift, and go to state 15

    struct_field_decls  go to state 112
    identifier_list     go to state 113


State 59

    9 type: FUNC function_signature .

    $default  reduce using rule 9 (type)


State 60

   15 literal_type: MAP '[' . type ']' type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 114
    literal_type  go to state 38


State 61

    2 type: '(' type . ')'

    ')'  shift, and go to state 115


State 62

    8 type: '*' type .

    $default  reduce using rule 8 (type)


State 63

   16 array_length: INT_LITERAL .

    $default  reduce using rule 16 (array_length)


State 64

   13 literal_type: '[' ']' . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 116
    literal_type  go to state 38


State 65

   12 literal_type: '[' array_length . ']' type

    ']'  shift, and go to state 117


State 66

   40 type_spec: IDENTIFIER '=' type .

    $default  reduce using rule 40 (type_spec)


State 67

   42 type_spec_list: type_spec ';' .
   43               | type_spec ';' . type_spec_list

    IDENTIFIER  shift, and go to state 12

    $default  reduce using rule 42 (type_spec_list)

    type_spec       go to state 39
    type_spec_list  go to state 118


State 68

   39 type_decl: TYPE '(' type_spec_list ')' .

    $default  reduce using rule 39 (type_decl)


State 69

  106 identifier_list: IDENTIFIER ',' identifier_list .

    $default  reduce using rule 106 (identifier_list)


State 70

   49 var_spec_list: var_spec ';' .
   50              | var_spec ';' . var_spec_list

    IDENTIFIER  shift, and go to state 15

    $default  reduce using rule 49 (var_spec_list)

    var_spec         go to state 42
    var_spec_list    go to state 119
    identifier_list  go to state 18


State 71

   45 var_decl: VAR '(' var_spec_list ')' .

    $default  reduce using rule 45 (var_decl)


State 72

    9 type: FUNC . function_signature
   85 literal: FUNC . function_signature block

    '('  shift, and go to state 21

    function_signature   go to state 120
    function_parameters  go to state 23


State 73

   11 literal_type: IDENTIFIER .
   81 operand: IDENTIFIER .

    '('       reduce using rule 11 (literal_type)
    '('       [reduce using rule 81 (operand)]
    ')'       reduce using rule 11 (literal_type)
    ')'       [reduce using rule 81 (operand)]
    '{'       reduce using rule 11 (literal_type)
    '{'       [reduce using rule 81 (operand)]
    $default  reduce using rule 81 (operand)


State 74

   87 basic_literal: INT_LITERAL .

    $default  reduce using rule 87 (basic_literal)


State 75

   88 basic_literal: FLOAT_LITERAL .

    $default  reduce using rule 88 (basic_literal)


State 76

   86 basic_literal: BOOL_LITERAL .

    $default  reduce using rule 86 (basic_literal)


State 77

   89 basic_literal: RUNE_LITERAL .

    $default  reduce using rule 89 (basic_literal)


State 78

   90 basic_literal: STRING_LITERAL .

    $default  reduce using rule 90 (basic_literal)


State 79

    2 type: '(' . type ')'
   82 operand: '(' . expression ')'

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    type                go to state 121
    literal_type        go to state 81
    expression          go to state 122
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    composite_literal   go to state 87
    primary_expression  go to state 88


State 80

   99 primary_expression: type . '(' expression ')'

    '('  shift, and go to state 123


State 81

   10 type: literal_type .
   93 composite_literal: literal_type . '{' element_list '}'

    '{'  shift, and go to state 124

    $default  reduce using rule 10 (type)


State 82

   91 expression_list: expression .
   92                | expression . ',' expression_list

    ','  shift, and go to state 125

    $default  reduce using rule 91 (expression_list)


State 83

   98 primary_expression: operand .

    $default  reduce using rule 98 (primary_expression)


State 84

   80 operand: literal .

    $default  reduce using rule 80 (operand)


State 85

   83 literal: basic_literal .

    $default  reduce using rule 83 (literal)


State 86

   48 var_spec: identifier_list '=' expression_list .

    $default  reduce using rule 48 (var_spec)


State 87

   84 literal: composite_literal .

    $default  reduce using rule 84 (literal)


State 88

   77 expression: primary_expression .
  100 primary_expression: primary_expression . '.' IDENTIFIER
  101                   | primary_expression . '[' expression ']'
  102                   | primary_expression . '[' optional_expression ':' optional_expression ']'
  103                   | primary_expression . '[' optional_expression ':' expression ':' expression ']'
  104                   | primary_expression . '(' expression_list ')'

    '('  shift, and go to state 126
    '['  shift, and go to state 127
    '.'  shift, and go to state 128

    $default  reduce using rule 77 (expression)


State 89

   47 var_spec: identifier_list type '=' . expression_list

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    type                go to state 80
    literal_type        go to state 81
    expression          go to state 82
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    expression_list     go to state 129
    composite_literal   go to state 87
    primary_expression  go to state 88


State 90

   26 function_parameter_list: type ',' . function_parameter_list

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 47
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type                     go to state 49
    literal_type             go to state 38
    function_parameter_list  go to state 130
    identifier_list          go to state 51


State 91

   22 function_parameters: '(' function_parameter_list ')' .

    $default  reduce using rule 22 (function_parameters)


State 92

   23 function_parameters: '(' function_parameter_list ',' . ')'

    ')'  shift, and go to state 131


State 93

   25 function_parameter_list: identifier_list type .
   27                        | identifier_list type . ',' function_parameter_list

    ','  shift, and go to state 132

    ','       [reduce using rule 25 (function_parameter_list)]
    $default  reduce using rule 25 (function_parameter_list)


State 94

   64 if_statement: IF . expression block
   65             | IF . expression block ELSE if_statement
   66             | IF . expression block ELSE block

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    type                go to state 80
    literal_type        go to state 81
    expression          go to state 133
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    composite_literal   go to state 87
    primary_expression  go to state 88


State 95

   67 switch_statement: SWITCH . expression '{' switch_clause_list '}'

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    type                go to state 80
    literal_type        go to state 81
    expression          go to state 134
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    composite_literal   go to state 87
    primary_expression  go to state 88


State 96

   72 return_statement: RETURN . expression_list

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    type                go to state 80
    literal_type        go to state 81
    expression          go to state 82
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    expression_list     go to state 135
    composite_literal   go to state 87
    primary_expression  go to state 88


State 97

   55 statement: BREAK .

    $default  reduce using rule 55 (statement)


State 98

   56 statement: CONTINUE .

    $default  reduce using rule 56 (statement)


State 99

   74 for_condition_statement: FOR . simple_statement ';' expression ';' simple_statement block
   75                        | FOR . expression block
   76                        | FOR . block

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35
    '{'             shift, and go to state 52

    $default  reduce using rule 59 (simple_statement)

    type                go to state 80
    literal_type        go to state 81
    block               go to state 136
    simple_statement    go to state 137
    expression          go to state 138
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    expression_list     go to state 110
    composite_literal   go to state 87
    primary_expression  go to state 88


State 100

   58 statement: declaration .

    $default  reduce using rule 58 (statement)


State 101

   63 statement_list: statement . ';' statement_list

    ';'  shift, and go to state 139


State 102

   51 statement: simple_statement .

    $default  reduce using rule 51 (statement)


State 103

   30 block: '{' statement_list . '}'

    '}'  shift, and go to state 140


State 104

   52 statement: if_statement .

    $default  reduce using rule 52 (statement)


State 105

   53 statement: switch_statement .

    $default  reduce using rule 53 (statement)


State 106

   54 statement: return_statement .

    $default  reduce using rule 54 (statement)


State 107

   57 statement: for_statement .

    $default  reduce using rule 57 (statement)


State 108

   73 for_statement: for_condition_statement .

    $default  reduce using rule 73 (for_statement)


State 109

   60 simple_statement: expression .
   91 expression_list: expression .
   92                | expression . ',' expression_list

    ','  shift, and go to state 125

    '='       reduce using rule 91 (expression_list)
    $default  reduce using rule 60 (simple_statement)


State 110

   61 simple_statement: expression_list . '=' expression_list

    '='  shift, and go to state 141


State 111

    2 type: '(' type . ')'
   24 function_parameter_list: type .
   26                        | type . ',' function_parameter_list

    ')'  shift, and go to state 115
    ','  shift, and go to state 90

    ')'  [reduce using rule 24 (function_parameter_list)]
    ','  [reduce using rule 24 (function_parameter_list)]


State 112

   14 literal_type: STRUCT '{' struct_field_decls . '}'

    '}'  shift, and go to state 142


State 113

   28 struct_field_decls: identifier_list . type ';'
   29                   | identifier_list . type ';' struct_field_decls

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 143
    literal_type  go to state 38


State 114

   15 literal_type: MAP '[' type . ']' type

    ']'  shift, and go to state 144


State 115

    2 type: '(' type ')' .

    $default  reduce using rule 2 (type)


State 116

   13 literal_type: '[' ']' type .

    $default  reduce using rule 13 (literal_type)


State 117

   12 literal_type: '[' array_length ']' . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 145
    literal_type  go to state 38


State 118

   43 type_spec_list: type_spec ';' type_spec_list .

    $default  reduce using rule 43 (type_spec_list)


State 119

   50 var_spec_list: var_spec ';' var_spec_list .

    $default  reduce using rule 50 (var_spec_list)


State 120

    9 type: FUNC function_signature .
   85 literal: FUNC function_signature . block

    '{'  shift, and go to state 52

    $default  reduce using rule 9 (type)

    block  go to state 146


State 121

    2 type: '(' type . ')'
   99 primary_expression: type . '(' expression ')'

    '('  shift, and go to state 123
    ')'  shift, and go to state 115


State 122

   82 operand: '(' expression . ')'

    ')'  shift, and go to state 147


State 123

   99 primary_expression: type '(' . expression ')'

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    type                go to state 80
    literal_type        go to state 81
    expression          go to state 148
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    composite_literal   go to state 87
    primary_expression  go to state 88


State 124

   93 composite_literal: literal_type '{' . element_list '}'

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 149
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    type                go to state 80
    literal_type        go to state 81
    expression          go to state 150
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    composite_literal   go to state 87
    element_list        go to state 151
    keyed_element       go to state 152
    primary_expression  go to state 88


State 125

   92 expression_list: expression ',' . expression_list

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    type                go to state 80
    literal_type        go to state 81
    expression          go to state 82
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    expression_list     go to state 153
    composite_literal   go to state 87
    primary_expression  go to state 88


State 126

  104 primary_expression: primary_expression '(' . expression_list ')'

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    type                go to state 80
    literal_type        go to state 81
    expression          go to state 82
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    expression_list     go to state 154
    composite_literal   go to state 87
    primary_expression  go to state 88


State 127

  101 primary_expression: primary_expression '[' . expression ']'
  102                   | primary_expression '[' . optional_expression ':' optional_expression ']'
  103                   | primary_expression '[' . optional_expression ':' expression ':' expression ']'

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    $default  reduce using rule 79 (optional_expression)

    type                 go to state 80
    literal_type         go to state 81
    expression           go to state 155
    optional_expression  go to state 156
    operand              go to state 83
    literal              go to state 84
    basic_literal        go to state 85
    composite_literal    go to state 87
    primary_expression   go to state 88


State 128

  100 primary_expression: primary_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 157


State 129

   47 var_spec: identifier_list type '=' expression_list .

    $default  reduce using rule 47 (var_spec)


State 130

   26 function_parameter_list: type ',' function_parameter_list .

    $default  reduce using rule 26 (function_parameter_list)


State 131

   23 function_parameters: '(' function_parameter_list ',' ')' .

    $default  reduce using rule 23 (function_parameters)


State 132

   27 function_parameter_list: identifier_list type ',' . function_parameter_list

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 47
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type                     go to state 49
    literal_type             go to state 38
    function_parameter_list  go to state 158
    identifier_list          go to state 51


State 133

   64 if_statement: IF expression . block
   65             | IF expression . block ELSE if_statement
   66             | IF expression . block ELSE block

    '{'  shift, and go to state 52

    block  go to state 159


State 134

   67 switch_statement: SWITCH expression . '{' switch_clause_list '}'

    '{'  shift, and go to state 160


State 135

   72 return_statement: RETURN expression_list .

    $default  reduce using rule 72 (return_statement)


State 136

   76 for_condition_statement: FOR block .

    $default  reduce using rule 76 (for_condition_statement)


State 137

   74 for_condition_statement: FOR simple_statement . ';' expression ';' simple_statement block

    ';'  shift, and go to state 161


State 138

   60 simple_statement: expression .
   75 for_condition_statement: FOR expression . block
   91 expression_list: expression .
   92                | expression . ',' expression_list

    '{'  shift, and go to state 52
    ','  shift, and go to state 125

    '='       reduce using rule 91 (expression_list)
    $default  reduce using rule 60 (simple_statement)

    block  go to state 162


State 139

   63 statement_list: statement ';' . statement_list

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    TYPE            shift, and go to state 2
    VAR             shift, and go to state 3
    IF              shift, and go to state 94
    SWITCH          shift, and go to state 95
    RETURN          shift, and go to state 96
    BREAK           shift, and go to state 97
    CONTINUE        shift, and go to state 98
    FOR             shift, and go to state 99
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    ';'       reduce using rule 59 (simple_statement)
    $default  reduce using rule 62 (statement_list)

    type                     go to state 80
    literal_type             go to state 81
    declaration              go to state 100
    type_decl                go to state 9
    var_decl                 go to state 10
    statement                go to state 101
    simple_statement         go to state 102
    statement_list           go to state 163
    if_statement             go to state 104
    switch_statement         go to state 105
    return_statement         go to state 106
    for_statement            go to state 107
    for_condition_statement  go to state 108
    expression               go to state 109
    operand                  go to state 83
    literal                  go to state 84
    basic_literal            go to state 85
    expression_list          go to state 110
    composite_literal        go to state 87
    primary_expression       go to state 88


State 140

   30 block: '{' statement_list '}' .

    $default  reduce using rule 30 (block)


State 141

   61 simple_statement: expression_list '=' . expression_list

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    type                go to state 80
    literal_type        go to state 81
    expression          go to state 82
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    expression_list     go to state 164
    composite_literal   go to state 87
    primary_expression  go to state 88


State 142

   14 literal_type: STRUCT '{' struct_field_decls '}' .

    $default  reduce using rule 14 (literal_type)


State 143

   28 struct_field_decls: identifier_list type . ';'
   29                   | identifier_list type . ';' struct_field_decls

    ';'  shift, and go to state 165


State 144

   15 literal_type: MAP '[' type ']' . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 166
    literal_type  go to state 38


State 145

   12 literal_type: '[' array_length ']' type .

    $default  reduce using rule 12 (literal_type)


State 146

   85 literal: FUNC function_signature block .

    $default  reduce using rule 85 (literal)


State 147

   82 operand: '(' expression ')' .

    $default  reduce using rule 82 (operand)


State 148

   99 primary_expression: type '(' expression . ')'

    ')'  shift, and go to state 167


State 149

   11 literal_type: IDENTIFIER .
   81 operand: IDENTIFIER .
   96 keyed_element: IDENTIFIER . ':' expression

    ':'  shift, and go to state 168

    '('       reduce using rule 11 (literal_type)
    '('       [reduce using rule 81 (operand)]
    '{'       reduce using rule 11 (literal_type)
    $default  reduce using rule 81 (operand)


State 150

   97 keyed_element: expression .

    $default  reduce using rule 97 (keyed_element)


State 151

   93 composite_literal: literal_type '{' element_list . '}'

    '}'  shift, and go to state 169


State 152

   94 element_list: keyed_element .
   95             | keyed_element . ',' element_list

    ','  shift, and go to state 170

    $default  reduce using rule 94 (element_list)


State 153

   92 expression_list: expression ',' expression_list .

    $default  reduce using rule 92 (expression_list)


State 154

  104 primary_expression: primary_expression '(' expression_list . ')'

    ')'  shift, and go to state 171


State 155

   78 optional_expression: expression .
  101 primary_expression: primary_expression '[' expression . ']'

    ']'  shift, and go to state 172

    $default  reduce using rule 78 (optional_expression)


State 156

  102 primary_expression: primary_expression '[' optional_expression . ':' optional_expression ']'
  103                   | primary_expression '[' optional_expression . ':' expression ':' expression ']'

    ':'  shift, and go to state 173


State 157

  100 primary_expression: primary_expression '.' IDENTIFIER .

    $default  reduce using rule 100 (primary_expression)


State 158

   27 function_parameter_list: identifier_list type ',' function_parameter_list .

    $default  reduce using rule 27 (function_parameter_list)


State 159

   64 if_statement: IF expression block .
   65             | IF expression block . ELSE if_statement
   66             | IF expression block . ELSE block

    ELSE  shift, and go to state 174

    $default  reduce using rule 64 (if_statement)


State 160

   67 switch_statement: SWITCH expression '{' . switch_clause_list '}'

    CASE     shift, and go to state 175
    DEFAULT  shift, and go to state 176

    $default  reduce using rule 70 (switch_clause_list)

    switch_clause       go to state 177
    switch_clause_list  go to state 178


State 161

   74 for_condition_statement: FOR simple_statement ';' . expression ';' simple_statement block

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    type                go to state 80
    literal_type        go to state 81
    expression          go to state 179
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    composite_literal   go to state 87
    primary_expression  go to state 88


State 162

   75 for_condition_statement: FOR expression block .

    $default  reduce using rule 75 (for_condition_statement)


State 163

   63 statement_list: statement ';' statement_list .

    $default  reduce using rule 63 (statement_list)


State 164

   61 simple_statement: expression_list '=' expression_list .

    $default  reduce using rule 61 (simple_statement)


State 165

   28 struct_field_decls: identifier_list type ';' .
   29                   | identifier_list type ';' . struct_field_decls

    IDENTIFIER  shift, and go to state 15

    $default  reduce using rule 28 (struct_field_decls)

    struct_field_decls  go to state 180
    identifier_list     go to state 113


State 166

   15 literal_type: MAP '[' type ']' type .

    $default  reduce using rule 15 (literal_type)


State 167

   99 primary_expression: type '(' expression ')' .

    $default  reduce using rule 99 (primary_expression)


State 168

   96 keyed_element: IDENTIFIER ':' . expression

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    type                go to state 80
    literal_type        go to state 81
    expression          go to state 181
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    composite_literal   go to state 87
    primary_expression  go to state 88


State 169

   93 composite_literal: literal_type '{' element_list '}' .

    $default  reduce using rule 93 (composite_literal)


State 170

   95 element_list: keyed_element ',' . element_list

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 149
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    type                go to state 80
    literal_type        go to state 81
    expression          go to state 150
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    composite_literal   go to state 87
    element_list        go to state 182
    keyed_element       go to state 152
    primary_expression  go to state 88


State 171

  104 primary_expression: primary_expression '(' expression_list ')' .

    $default  reduce using rule 104 (primary_expression)


State 172

  101 primary_expression: primary_expression '[' expression ']' .

    $default  reduce using rule 101 (primary_expression)


State 173

  102 primary_expression: primary_expression '[' optional_expression ':' . optional_expression ']'
  103                   | primary_expression '[' optional_expression ':' . expression ':' expression ']'

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    $default  reduce using rule 79 (optional_expression)

    type                 go to state 80
    literal_type         go to state 81
    expression           go to state 183
    optional_expression  go to state 184
    operand              go to state 83
    literal              go to state 84
    basic_literal        go to state 85
    composite_literal    go to state 87
    primary_expression   go to state 88


State 174

   65 if_statement: IF expression block ELSE . if_statement
   66             | IF expression block ELSE . block

    IF   shift, and go to state 94
    '{'  shift, and go to state 52

    block         go to state 185
    if_statement  go to state 186


State 175

   68 switch_clause: CASE . expression_list ':' statement_list

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    type                go to state 80
    literal_type        go to state 81
    expression          go to state 82
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    expression_list     go to state 187
    composite_literal   go to state 87
    primary_expression  go to state 88


State 176

   69 switch_clause: DEFAULT . ':' statement_list

    ':'  shift, and go to state 188


State 177

   71 switch_clause_list: switch_clause . switch_clause_list

    CASE     shift, and go to state 175
    DEFAULT  shift, and go to state 176

    $default  reduce using rule 70 (switch_clause_list)

    switch_clause       go to state 177
    switch_clause_list  go to state 189


State 178

   67 switch_statement: SWITCH expression '{' switch_clause_list . '}'

    '}'  shift, and go to state 190


State 179

   74 for_condition_statement: FOR simple_statement ';' expression . ';' simple_statement block

    ';'  shift, and go to state 191


State 180

   29 struct_field_decls: identifier_list type ';' struct_field_decls .

    $default  reduce using rule 29 (struct_field_decls)


State 181

   96 keyed_element: IDENTIFIER ':' expression .

    $default  reduce using rule 96 (keyed_element)


State 182

   95 element_list: keyed_element ',' element_list .

    $default  reduce using rule 95 (element_list)


State 183

   78 optional_expression: expression .
  103 primary_expression: primary_expression '[' optional_expression ':' expression . ':' expression ']'

    ':'  shift, and go to state 192

    $default  reduce using rule 78 (optional_expression)


State 184

  102 primary_expression: primary_expression '[' optional_expression ':' optional_expression . ']'

    ']'  shift, and go to state 193


State 185

   66 if_statement: IF expression block ELSE block .

    $default  reduce using rule 66 (if_statement)


State 186

   65 if_statement: IF expression block ELSE if_statement .

    $default  reduce using rule 65 (if_statement)


State 187

   68 switch_clause: CASE expression_list . ':' statement_list

    ':'  shift, and go to state 194


State 188

   69 switch_clause: DEFAULT ':' . statement_list

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    TYPE            shift, and go to state 2
    VAR             shift, and go to state 3
    IF              shift, and go to state 94
    SWITCH          shift, and go to state 95
    RETURN          shift, and go to state 96
    BREAK           shift, and go to state 97
    CONTINUE        shift, and go to state 98
    FOR             shift, and go to state 99
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    ';'       reduce using rule 59 (simple_statement)
    $default  reduce using rule 62 (statement_list)

    type                     go to state 80
    literal_type             go to state 81
    declaration              go to state 100
    type_decl                go to state 9
    var_decl                 go to state 10
    statement                go to state 101
    simple_statement         go to state 102
    statement_list           go to state 195
    if_statement             go to state 104
    switch_statement         go to state 105
    return_statement         go to state 106
    for_statement            go to state 107
    for_condition_statement  go to state 108
    expression               go to state 109
    operand                  go to state 83
    literal                  go to state 84
    basic_literal            go to state 85
    expression_list          go to state 110
    composite_literal        go to state 87
    primary_expression       go to state 88


State 189

   71 switch_clause_list: switch_clause switch_clause_list .

    $default  reduce using rule 71 (switch_clause_list)


State 190

   67 switch_statement: SWITCH expression '{' switch_clause_list '}' .

    $default  reduce using rule 67 (switch_statement)


State 191

   74 for_condition_statement: FOR simple_statement ';' expression ';' . simple_statement block

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    $default  reduce using rule 59 (simple_statement)

    type                go to state 80
    literal_type        go to state 81
    simple_statement    go to state 196
    expression          go to state 109
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    expression_list     go to state 110
    composite_literal   go to state 87
    primary_expression  go to state 88


State 192

  103 primary_expression: primary_expression '[' optional_expression ':' expression ':' . expression ']'

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    type                go to state 80
    literal_type        go to state 81
    expression          go to state 197
    operand             go to state 83
    literal             go to state 84
    basic_literal       go to state 85
    composite_literal   go to state 87
    primary_expression  go to state 88


State 193

  102 primary_expression: primary_expression '[' optional_expression ':' optional_expression ']' .

    $default  reduce using rule 102 (primary_expression)


State 194

   68 switch_clause: CASE expression_list ':' . statement_list

    BOOL            shift, and go to state 24
    INT             shift, and go to state 25
    FLOAT32         shift, and go to state 26
    RUNE            shift, and go to state 27
    STRING          shift, and go to state 28
    STRUCT          shift, and go to state 29
    FUNC            shift, and go to state 72
    MAP             shift, and go to state 31
    TYPE            shift, and go to state 2
    VAR             shift, and go to state 3
    IF              shift, and go to state 94
    SWITCH          shift, and go to state 95
    RETURN          shift, and go to state 96
    BREAK           shift, and go to state 97
    CONTINUE        shift, and go to state 98
    FOR             shift, and go to state 99
    IDENTIFIER      shift, and go to state 73
    INT_LITERAL     shift, and go to state 74
    FLOAT_LITERAL   shift, and go to state 75
    BOOL_LITERAL    shift, and go to state 76
    RUNE_LITERAL    shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    '('             shift, and go to state 79
    '*'             shift, and go to state 34
    '['             shift, and go to state 35

    ';'       reduce using rule 59 (simple_statement)
    $default  reduce using rule 62 (statement_list)

    type                     go to state 80
    literal_type             go to state 81
    declaration              go to state 100
    type_decl                go to state 9
    var_decl                 go to state 10
    statement                go to state 101
    simple_statement         go to state 102
    statement_list           go to state 198
    if_statement             go to state 104
    switch_statement         go to state 105
    return_statement         go to state 106
    for_statement            go to state 107
    for_condition_statement  go to state 108
    expression               go to state 109
    operand                  go to state 83
    literal                  go to state 84
    basic_literal            go to state 85
    expression_list          go to state 110
    composite_literal        go to state 87
    primary_expression       go to state 88


State 195

   69 switch_clause: DEFAULT ':' statement_list .

    $default  reduce using rule 69 (switch_clause)


State 196

   74 for_condition_statement: FOR simple_statement ';' expression ';' simple_statement . block

    '{'  shift, and go to state 52

    block  go to state 199


State 197

  103 primary_expression: primary_expression '[' optional_expression ':' expression ':' expression . ']'

    ']'  shift, and go to state 200


State 198

   68 switch_clause: CASE expression_list ':' statement_list .

    $default  reduce using rule 68 (switch_clause)


State 199

   74 for_condition_statement: FOR simple_statement ';' expression ';' simple_statement block .

    $default  reduce using rule 74 (for_condition_statement)


State 200

  103 primary_expression: primary_expression '[' optional_expression ':' expression ':' expression ']' .

    $default  reduce using rule 103 (primary_expression)
