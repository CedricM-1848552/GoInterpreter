Nonterminals useless in grammar

   top_level_declaration


Terminals unused in grammar

   COMPLEX64
   BYTE


Rules useless in grammar

   58 top_level_declaration: declaration


State 73 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 95 conflicts: 1 shift/reduce
State 96 conflicts: 2 shift/reduce


Grammar

    0 $accept: start $end

    1 start: block

    2 type: IDENTIFIER
    3     | '(' type ')'
    4     | BOOL
    5     | INT
    6     | FLOAT32
    7     | RUNE
    8     | STRING
    9     | '[' array_length ']' type
   10     | '[' ']' type
   11     | STRUCT '{' struct_field_decls '}'
   12     | '*' type
   13     | FUNC function_signature
   14     | MAP '[' type ']' type

   15 array_length: INT_LITERAL

   16 function_signature: function_parameters function_result

   17 function_result: /* empty */
   18                | function_parameters
   19                | type

   20 function_parameters: '(' ')'
   21                    | '(' function_parameter_list ')'
   22                    | '(' function_parameter_list ',' ')'

   23 function_parameter_list: type
   24                        | identifier_list type
   25                        | type ',' function_parameter_list
   26                        | identifier_list type ',' function_parameter_list

   27 struct_field_decls: identifier_list type ';'
   28                   | identifier_list type ';' struct_field_decls

   29 block: '{' statement_list '}'

   30 statement: declaration

   31 statement_list: statement ';'
   32               | statement ';' statement_list

   33 declaration: type_decl
   34            | var_decl

   35 type_decl: TYPE type_spec
   36          | TYPE '(' type_spec_list ')'

   37 type_spec: IDENTIFIER '=' type
   38          | IDENTIFIER type

   39 type_spec_list: type_spec ';'
   40               | type_spec ';' type_spec_list

   41 var_decl: VAR var_spec
   42         | VAR '(' var_spec_list ')'
   43         | identifier_list SHORT_VAR_DECL expression_list

   44 var_spec: identifier_list type
   45         | identifier_list type '=' expression_list
   46         | identifier_list '=' expression_list

   47 var_spec_list: var_spec ';'
   48              | var_spec ';' var_spec_list

   49 expression: BOOL_LITERAL
   50           | INT_LITERAL
   51           | FLOAT_LITERAL
   52           | RUNE_LITERAL
   53           | STRING_LITERAL

   54 expression_list: expression
   55                | expression ',' expression_list

   56 identifier_list: IDENTIFIER
   57                | IDENTIFIER ',' identifier_list


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 20 21 22 36 42
')' (41) 3 20 21 22 36 42
'*' (42) 12
',' (44) 22 25 26 55 57
';' (59) 27 28 31 32 39 40 47 48
'=' (61) 37 45 46
'[' (91) 9 10 14
']' (93) 9 10 14
'{' (123) 11 29
'}' (125) 11 29
error (256)
BOOL (258) 4
INT (259) 5
FLOAT32 (260) 6
COMPLEX64 (261)
BYTE (262)
RUNE (263) 7
STRING (264) 8
STRUCT (265) 11
FUNC (266) 13
MAP (267) 14
TYPE (268) 35 36
VAR (269) 41 42
SHORT_VAR_DECL (270) 43
IDENTIFIER (271) 2 37 38 56 57
INT_LITERAL (272) 15 50
FLOAT_LITERAL (273) 51
BOOL_LITERAL (274) 49
RUNE_LITERAL (275) 52
STRING_LITERAL (276) 53


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
start (33)
    on left: 1, on right: 0
type (34)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14, on right: 3 9 10 12 14
    19 23 24 25 26 27 28 37 38 44 45
array_length (35)
    on left: 15, on right: 9
function_signature (36)
    on left: 16, on right: 13
function_result (37)
    on left: 17 18 19, on right: 16
function_parameters (38)
    on left: 20 21 22, on right: 16 18
function_parameter_list (39)
    on left: 23 24 25 26, on right: 21 22 25 26
struct_field_decls (40)
    on left: 27 28, on right: 11 28
block (41)
    on left: 29, on right: 1
statement (42)
    on left: 30, on right: 31 32
statement_list (43)
    on left: 31 32, on right: 29 32
declaration (44)
    on left: 33 34, on right: 30
type_decl (45)
    on left: 35 36, on right: 33
type_spec (46)
    on left: 37 38, on right: 35 39 40
type_spec_list (47)
    on left: 39 40, on right: 36 40
var_decl (48)
    on left: 41 42 43, on right: 34
var_spec (49)
    on left: 44 45 46, on right: 41 47 48
var_spec_list (50)
    on left: 47 48, on right: 42 48
expression (51)
    on left: 49 50 51 52 53, on right: 54 55
expression_list (52)
    on left: 54 55, on right: 43 45 46 55
identifier_list (53)
    on left: 56 57, on right: 24 26 27 28 43 44 45 46 57


State 0

    0 $accept: . start $end

    '{'  shift, and go to state 1

    start  go to state 2
    block  go to state 3


State 1

   29 block: '{' . statement_list '}'

    TYPE        shift, and go to state 4
    VAR         shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    statement        go to state 7
    statement_list   go to state 8
    declaration      go to state 9
    type_decl        go to state 10
    var_decl         go to state 11
    identifier_list  go to state 12


State 2

    0 $accept: start . $end

    $end  shift, and go to state 13


State 3

    1 start: block .

    $default  reduce using rule 1 (start)


State 4

   35 type_decl: TYPE . type_spec
   36          | TYPE . '(' type_spec_list ')'

    IDENTIFIER  shift, and go to state 14
    '('         shift, and go to state 15

    type_spec  go to state 16


State 5

   41 var_decl: VAR . var_spec
   42         | VAR . '(' var_spec_list ')'

    IDENTIFIER  shift, and go to state 6
    '('         shift, and go to state 17

    var_spec         go to state 18
    identifier_list  go to state 19


State 6

   56 identifier_list: IDENTIFIER .
   57                | IDENTIFIER . ',' identifier_list

    ','  shift, and go to state 20

    $default  reduce using rule 56 (identifier_list)


State 7

   31 statement_list: statement . ';'
   32               | statement . ';' statement_list

    ';'  shift, and go to state 21


State 8

   29 block: '{' statement_list . '}'

    '}'  shift, and go to state 22


State 9

   30 statement: declaration .

    $default  reduce using rule 30 (statement)


State 10

   33 declaration: type_decl .

    $default  reduce using rule 33 (declaration)


State 11

   34 declaration: var_decl .

    $default  reduce using rule 34 (declaration)


State 12

   43 var_decl: identifier_list . SHORT_VAR_DECL expression_list

    SHORT_VAR_DECL  shift, and go to state 23


State 13

    0 $accept: start $end .

    $default  accept


State 14

   37 type_spec: IDENTIFIER . '=' type
   38          | IDENTIFIER . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 34
    '*'         shift, and go to state 35
    '='         shift, and go to state 36

    type  go to state 37


State 15

   36 type_decl: TYPE '(' . type_spec_list ')'

    IDENTIFIER  shift, and go to state 14

    type_spec       go to state 38
    type_spec_list  go to state 39


State 16

   35 type_decl: TYPE type_spec .

    $default  reduce using rule 35 (type_decl)


State 17

   42 var_decl: VAR '(' . var_spec_list ')'

    IDENTIFIER  shift, and go to state 6

    var_spec         go to state 40
    var_spec_list    go to state 41
    identifier_list  go to state 19


State 18

   41 var_decl: VAR var_spec .

    $default  reduce using rule 41 (var_decl)


State 19

   44 var_spec: identifier_list . type
   45         | identifier_list . type '=' expression_list
   46         | identifier_list . '=' expression_list

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 34
    '*'         shift, and go to state 35
    '='         shift, and go to state 42

    type  go to state 43


State 20

   57 identifier_list: IDENTIFIER ',' . identifier_list

    IDENTIFIER  shift, and go to state 6

    identifier_list  go to state 44


State 21

   31 statement_list: statement ';' .
   32               | statement ';' . statement_list

    TYPE        shift, and go to state 4
    VAR         shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 31 (statement_list)

    statement        go to state 7
    statement_list   go to state 45
    declaration      go to state 9
    type_decl        go to state 10
    var_decl         go to state 11
    identifier_list  go to state 12


State 22

   29 block: '{' statement_list '}' .

    $default  reduce using rule 29 (block)


State 23

   43 var_decl: identifier_list SHORT_VAR_DECL . expression_list

    INT_LITERAL     shift, and go to state 46
    FLOAT_LITERAL   shift, and go to state 47
    BOOL_LITERAL    shift, and go to state 48
    RUNE_LITERAL    shift, and go to state 49
    STRING_LITERAL  shift, and go to state 50

    expression       go to state 51
    expression_list  go to state 52


State 24

    4 type: BOOL .

    $default  reduce using rule 4 (type)


State 25

    5 type: INT .

    $default  reduce using rule 5 (type)


State 26

    6 type: FLOAT32 .

    $default  reduce using rule 6 (type)


State 27

    7 type: RUNE .

    $default  reduce using rule 7 (type)


State 28

    8 type: STRING .

    $default  reduce using rule 8 (type)


State 29

   11 type: STRUCT . '{' struct_field_decls '}'

    '{'  shift, and go to state 53


State 30

   13 type: FUNC . function_signature

    '('  shift, and go to state 54

    function_signature   go to state 55
    function_parameters  go to state 56


State 31

   14 type: MAP . '[' type ']' type

    '['  shift, and go to state 57


State 32

    2 type: IDENTIFIER .

    $default  reduce using rule 2 (type)


State 33

    3 type: '(' . type ')'

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 34
    '*'         shift, and go to state 35

    type  go to state 58


State 34

    9 type: '[' . array_length ']' type
   10     | '[' . ']' type

    INT_LITERAL  shift, and go to state 59
    ']'          shift, and go to state 60

    array_length  go to state 61


State 35

   12 type: '*' . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 34
    '*'         shift, and go to state 35

    type  go to state 62


State 36

   37 type_spec: IDENTIFIER '=' . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 34
    '*'         shift, and go to state 35

    type  go to state 63


State 37

   38 type_spec: IDENTIFIER type .

    $default  reduce using rule 38 (type_spec)


State 38

   39 type_spec_list: type_spec . ';'
   40               | type_spec . ';' type_spec_list

    ';'  shift, and go to state 64


State 39

   36 type_decl: TYPE '(' type_spec_list . ')'

    ')'  shift, and go to state 65


State 40

   47 var_spec_list: var_spec . ';'
   48              | var_spec . ';' var_spec_list

    ';'  shift, and go to state 66


State 41

   42 var_decl: VAR '(' var_spec_list . ')'

    ')'  shift, and go to state 67


State 42

   46 var_spec: identifier_list '=' . expression_list

    INT_LITERAL     shift, and go to state 46
    FLOAT_LITERAL   shift, and go to state 47
    BOOL_LITERAL    shift, and go to state 48
    RUNE_LITERAL    shift, and go to state 49
    STRING_LITERAL  shift, and go to state 50

    expression       go to state 51
    expression_list  go to state 68


State 43

   44 var_spec: identifier_list type .
   45         | identifier_list type . '=' expression_list

    '='  shift, and go to state 69

    $default  reduce using rule 44 (var_spec)


State 44

   57 identifier_list: IDENTIFIER ',' identifier_list .

    $default  reduce using rule 57 (identifier_list)


State 45

   32 statement_list: statement ';' statement_list .

    $default  reduce using rule 32 (statement_list)


State 46

   50 expression: INT_LITERAL .

    $default  reduce using rule 50 (expression)


State 47

   51 expression: FLOAT_LITERAL .

    $default  reduce using rule 51 (expression)


State 48

   49 expression: BOOL_LITERAL .

    $default  reduce using rule 49 (expression)


State 49

   52 expression: RUNE_LITERAL .

    $default  reduce using rule 52 (expression)


State 50

   53 expression: STRING_LITERAL .

    $default  reduce using rule 53 (expression)


State 51

   54 expression_list: expression .
   55                | expression . ',' expression_list

    ','  shift, and go to state 70

    $default  reduce using rule 54 (expression_list)


State 52

   43 var_decl: identifier_list SHORT_VAR_DECL expression_list .

    $default  reduce using rule 43 (var_decl)


State 53

   11 type: STRUCT '{' . struct_field_decls '}'

    IDENTIFIER  shift, and go to state 6

    struct_field_decls  go to state 71
    identifier_list     go to state 72


State 54

   20 function_parameters: '(' . ')'
   21                    | '(' . function_parameter_list ')'
   22                    | '(' . function_parameter_list ',' ')'

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 73
    '('         shift, and go to state 33
    ')'         shift, and go to state 74
    '['         shift, and go to state 34
    '*'         shift, and go to state 35

    type                     go to state 75
    function_parameter_list  go to state 76
    identifier_list          go to state 77


State 55

   13 type: FUNC function_signature .

    $default  reduce using rule 13 (type)


State 56

   16 function_signature: function_parameters . function_result

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 78
    '['         shift, and go to state 34
    '*'         shift, and go to state 35

    $default  reduce using rule 17 (function_result)

    type                 go to state 79
    function_result      go to state 80
    function_parameters  go to state 81


State 57

   14 type: MAP '[' . type ']' type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 34
    '*'         shift, and go to state 35

    type  go to state 82


State 58

    3 type: '(' type . ')'

    ')'  shift, and go to state 83


State 59

   15 array_length: INT_LITERAL .

    $default  reduce using rule 15 (array_length)


State 60

   10 type: '[' ']' . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 34
    '*'         shift, and go to state 35

    type  go to state 84


State 61

    9 type: '[' array_length . ']' type

    ']'  shift, and go to state 85


State 62

   12 type: '*' type .

    $default  reduce using rule 12 (type)


State 63

   37 type_spec: IDENTIFIER '=' type .

    $default  reduce using rule 37 (type_spec)


State 64

   39 type_spec_list: type_spec ';' .
   40               | type_spec ';' . type_spec_list

    IDENTIFIER  shift, and go to state 14

    $default  reduce using rule 39 (type_spec_list)

    type_spec       go to state 38
    type_spec_list  go to state 86


State 65

   36 type_decl: TYPE '(' type_spec_list ')' .

    $default  reduce using rule 36 (type_decl)


State 66

   47 var_spec_list: var_spec ';' .
   48              | var_spec ';' . var_spec_list

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 47 (var_spec_list)

    var_spec         go to state 40
    var_spec_list    go to state 87
    identifier_list  go to state 19


State 67

   42 var_decl: VAR '(' var_spec_list ')' .

    $default  reduce using rule 42 (var_decl)


State 68

   46 var_spec: identifier_list '=' expression_list .

    $default  reduce using rule 46 (var_spec)


State 69

   45 var_spec: identifier_list type '=' . expression_list

    INT_LITERAL     shift, and go to state 46
    FLOAT_LITERAL   shift, and go to state 47
    BOOL_LITERAL    shift, and go to state 48
    RUNE_LITERAL    shift, and go to state 49
    STRING_LITERAL  shift, and go to state 50

    expression       go to state 51
    expression_list  go to state 88


State 70

   55 expression_list: expression ',' . expression_list

    INT_LITERAL     shift, and go to state 46
    FLOAT_LITERAL   shift, and go to state 47
    BOOL_LITERAL    shift, and go to state 48
    RUNE_LITERAL    shift, and go to state 49
    STRING_LITERAL  shift, and go to state 50

    expression       go to state 51
    expression_list  go to state 89


State 71

   11 type: STRUCT '{' struct_field_decls . '}'

    '}'  shift, and go to state 90


State 72

   27 struct_field_decls: identifier_list . type ';'
   28                   | identifier_list . type ';' struct_field_decls

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 34
    '*'         shift, and go to state 35

    type  go to state 91


State 73

    2 type: IDENTIFIER .
   56 identifier_list: IDENTIFIER .
   57                | IDENTIFIER . ',' identifier_list

    ','  shift, and go to state 20

    ')'       reduce using rule 2 (type)
    ','       [reduce using rule 2 (type)]
    $default  reduce using rule 56 (identifier_list)


State 74

   20 function_parameters: '(' ')' .

    $default  reduce using rule 20 (function_parameters)


State 75

   23 function_parameter_list: type .
   25                        | type . ',' function_parameter_list

    ','  shift, and go to state 92

    ','       [reduce using rule 23 (function_parameter_list)]
    $default  reduce using rule 23 (function_parameter_list)


State 76

   21 function_parameters: '(' function_parameter_list . ')'
   22                    | '(' function_parameter_list . ',' ')'

    ')'  shift, and go to state 93
    ','  shift, and go to state 94


State 77

   24 function_parameter_list: identifier_list . type
   26                        | identifier_list . type ',' function_parameter_list

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 34
    '*'         shift, and go to state 35

    type  go to state 95


State 78

    3 type: '(' . type ')'
   20 function_parameters: '(' . ')'
   21                    | '(' . function_parameter_list ')'
   22                    | '(' . function_parameter_list ',' ')'

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 73
    '('         shift, and go to state 33
    ')'         shift, and go to state 74
    '['         shift, and go to state 34
    '*'         shift, and go to state 35

    type                     go to state 96
    function_parameter_list  go to state 76
    identifier_list          go to state 77


State 79

   19 function_result: type .

    $default  reduce using rule 19 (function_result)


State 80

   16 function_signature: function_parameters function_result .

    $default  reduce using rule 16 (function_signature)


State 81

   18 function_result: function_parameters .

    $default  reduce using rule 18 (function_result)


State 82

   14 type: MAP '[' type . ']' type

    ']'  shift, and go to state 97


State 83

    3 type: '(' type ')' .

    $default  reduce using rule 3 (type)


State 84

   10 type: '[' ']' type .

    $default  reduce using rule 10 (type)


State 85

    9 type: '[' array_length ']' . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 34
    '*'         shift, and go to state 35

    type  go to state 98


State 86

   40 type_spec_list: type_spec ';' type_spec_list .

    $default  reduce using rule 40 (type_spec_list)


State 87

   48 var_spec_list: var_spec ';' var_spec_list .

    $default  reduce using rule 48 (var_spec_list)


State 88

   45 var_spec: identifier_list type '=' expression_list .

    $default  reduce using rule 45 (var_spec)


State 89

   55 expression_list: expression ',' expression_list .

    $default  reduce using rule 55 (expression_list)


State 90

   11 type: STRUCT '{' struct_field_decls '}' .

    $default  reduce using rule 11 (type)


State 91

   27 struct_field_decls: identifier_list type . ';'
   28                   | identifier_list type . ';' struct_field_decls

    ';'  shift, and go to state 99


State 92

   25 function_parameter_list: type ',' . function_parameter_list

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 73
    '('         shift, and go to state 33
    '['         shift, and go to state 34
    '*'         shift, and go to state 35

    type                     go to state 75
    function_parameter_list  go to state 100
    identifier_list          go to state 77


State 93

   21 function_parameters: '(' function_parameter_list ')' .

    $default  reduce using rule 21 (function_parameters)


State 94

   22 function_parameters: '(' function_parameter_list ',' . ')'

    ')'  shift, and go to state 101


State 95

   24 function_parameter_list: identifier_list type .
   26                        | identifier_list type . ',' function_parameter_list

    ','  shift, and go to state 102

    ','       [reduce using rule 24 (function_parameter_list)]
    $default  reduce using rule 24 (function_parameter_list)


State 96

    3 type: '(' type . ')'
   23 function_parameter_list: type .
   25                        | type . ',' function_parameter_list

    ')'  shift, and go to state 83
    ','  shift, and go to state 92

    ')'  [reduce using rule 23 (function_parameter_list)]
    ','  [reduce using rule 23 (function_parameter_list)]


State 97

   14 type: MAP '[' type ']' . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 34
    '*'         shift, and go to state 35

    type  go to state 103


State 98

    9 type: '[' array_length ']' type .

    $default  reduce using rule 9 (type)


State 99

   27 struct_field_decls: identifier_list type ';' .
   28                   | identifier_list type ';' . struct_field_decls

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 27 (struct_field_decls)

    struct_field_decls  go to state 104
    identifier_list     go to state 72


State 100

   25 function_parameter_list: type ',' function_parameter_list .

    $default  reduce using rule 25 (function_parameter_list)


State 101

   22 function_parameters: '(' function_parameter_list ',' ')' .

    $default  reduce using rule 22 (function_parameters)


State 102

   26 function_parameter_list: identifier_list type ',' . function_parameter_list

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 73
    '('         shift, and go to state 33
    '['         shift, and go to state 34
    '*'         shift, and go to state 35

    type                     go to state 75
    function_parameter_list  go to state 105
    identifier_list          go to state 77


State 103

   14 type: MAP '[' type ']' type .

    $default  reduce using rule 14 (type)


State 104

   28 struct_field_decls: identifier_list type ';' struct_field_decls .

    $default  reduce using rule 28 (struct_field_decls)


State 105

   26 function_parameter_list: identifier_list type ',' function_parameter_list .

    $default  reduce using rule 26 (function_parameter_list)
