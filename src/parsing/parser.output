Terminals unused in grammar

   SHORT_VAR_DECL
   INC
   DEC
   ELLIPSIS


State 47 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 72 conflicts: 1 reduce/reduce
State 86 conflicts: 1 shift/reduce
State 104 conflicts: 2 shift/reduce


Grammar

    0 $accept: start $end

    1 start: top_level_declaration_list

    2 type: '(' type ')'
    3     | BOOL
    4     | INT
    5     | FLOAT32
    6     | RUNE
    7     | STRING
    8     | '*' type
    9     | FUNC function_signature
   10     | literal_type

   11 literal_type: IDENTIFIER
   12             | '[' array_length ']' type
   13             | '[' ']' type
   14             | STRUCT '{' struct_field_decls '}'
   15             | MAP '[' type ']' type

   16 array_length: INT_LITERAL

   17 function_signature: function_parameters function_result

   18 function_result: /* empty */
   19                | function_parameters
   20                | type

   21 function_parameters: '(' ')'
   22                    | '(' function_parameter_list ')'
   23                    | '(' function_parameter_list ',' ')'

   24 function_parameter_list: type
   25                        | identifier_list type
   26                        | type ',' function_parameter_list
   27                        | identifier_list type ',' function_parameter_list

   28 struct_field_decls: identifier_list type ';'
   29                   | identifier_list type ';' struct_field_decls

   30 block: '{' statement_list '}'

   31 top_level_declaration: declaration
   32                      | function_declaration

   33 top_level_declaration_list: top_level_declaration
   34                           | top_level_declaration ';' top_level_declaration_list

   35 function_declaration: FUNC IDENTIFIER function_signature block

   36 declaration: type_decl
   37            | var_decl

   38 type_decl: TYPE type_spec
   39          | TYPE '(' type_spec_list ')'

   40 type_spec: IDENTIFIER '=' type
   41          | IDENTIFIER type

   42 type_spec_list: type_spec ';'
   43               | type_spec ';' type_spec_list

   44 var_decl: VAR var_spec
   45         | VAR '(' var_spec_list ')'

   46 var_spec: identifier_list type
   47         | identifier_list type '=' expression_list
   48         | identifier_list '=' expression_list

   49 var_spec_list: var_spec ';'
   50              | var_spec ';' var_spec_list

   51 statement: simple_statement
   52          | if_statement
   53          | switch_statement
   54          | return_statement
   55          | BREAK
   56          | CONTINUE
   57          | for_statement
   58          | declaration

   59 simple_statement: /* empty */
   60                 | expression
   61                 | expression_list '=' expression_list

   62 statement_list: /* empty */
   63               | statement ';' statement_list

   64 if_statement: IF expression block
   65             | IF expression block ELSE if_statement
   66             | IF expression block ELSE block

   67 switch_statement: SWITCH expression '{' switch_clause_list '}'

   68 switch_clause: CASE expression_list ':' statement_list
   69              | DEFAULT ':' statement_list

   70 switch_clause_list: /* empty */
   71                   | switch_clause switch_clause_list

   72 return_statement: RETURN expression_list

   73 for_statement: for_condition_statement

   74 for_condition_statement: FOR simple_statement ';' expression ';' simple_statement block
   75                        | FOR expression block
   76                        | FOR block

   77 expression: BOOL_LITERAL
   78           | INT_LITERAL
   79           | FLOAT_LITERAL
   80           | RUNE_LITERAL
   81           | STRING_LITERAL
   82           | IDENTIFIER
   83           | composite_literal

   84 expression_list: expression
   85                | expression ',' expression_list

   86 composite_literal: literal_type '{' element_list '}'

   87 element_list: keyed_element
   88             | keyed_element ',' element_list

   89 keyed_element: IDENTIFIER ':' expression
   90              | expression

   91 identifier_list: IDENTIFIER
   92                | IDENTIFIER ',' identifier_list


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 21 22 23 39 45
')' (41) 2 21 22 23 39 45
'*' (42) 8
',' (44) 23 26 27 85 88 92
':' (58) 68 69 89
';' (59) 28 29 34 42 43 49 50 63 74
'=' (61) 40 47 48 61
'[' (91) 12 13 15
']' (93) 12 13 15
'{' (123) 14 30 67 86
'}' (125) 14 30 67 86
error (256)
BOOL (258) 3
INT (259) 4
FLOAT32 (260) 5
RUNE (261) 6
STRING (262) 7
STRUCT (263) 14
FUNC (264) 9 35
MAP (265) 15
TYPE (266) 38 39
VAR (267) 44 45
SHORT_VAR_DECL (268)
IF (269) 64 65 66
ELSE (270) 65 66
SWITCH (271) 67
CASE (272) 68
DEFAULT (273) 69
RETURN (274) 72
BREAK (275) 55
CONTINUE (276) 56
FOR (277) 74 75 76
INC (278)
DEC (279)
ELLIPSIS (280)
IDENTIFIER (281) 11 35 40 41 82 89 91 92
INT_LITERAL (282) 16 78
FLOAT_LITERAL (283) 79
BOOL_LITERAL (284) 77
RUNE_LITERAL (285) 80
STRING_LITERAL (286) 81


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
start (44)
    on left: 1, on right: 0
type (45)
    on left: 2 3 4 5 6 7 8 9 10, on right: 2 8 12 13 15 20 24 25 26
    27 28 29 40 41 46 47
literal_type (46)
    on left: 11 12 13 14 15, on right: 10 86
array_length (47)
    on left: 16, on right: 12
function_signature (48)
    on left: 17, on right: 9 35
function_result (49)
    on left: 18 19 20, on right: 17
function_parameters (50)
    on left: 21 22 23, on right: 17 19
function_parameter_list (51)
    on left: 24 25 26 27, on right: 22 23 26 27
struct_field_decls (52)
    on left: 28 29, on right: 14 29
block (53)
    on left: 30, on right: 35 64 65 66 74 75 76
top_level_declaration (54)
    on left: 31 32, on right: 33 34
top_level_declaration_list (55)
    on left: 33 34, on right: 1 34
function_declaration (56)
    on left: 35, on right: 32
declaration (57)
    on left: 36 37, on right: 31 58
type_decl (58)
    on left: 38 39, on right: 36
type_spec (59)
    on left: 40 41, on right: 38 42 43
type_spec_list (60)
    on left: 42 43, on right: 39 43
var_decl (61)
    on left: 44 45, on right: 37
var_spec (62)
    on left: 46 47 48, on right: 44 49 50
var_spec_list (63)
    on left: 49 50, on right: 45 50
statement (64)
    on left: 51 52 53 54 55 56 57 58, on right: 63
simple_statement (65)
    on left: 59 60 61, on right: 51 74
statement_list (66)
    on left: 62 63, on right: 30 63 68 69
if_statement (67)
    on left: 64 65 66, on right: 52 65
switch_statement (68)
    on left: 67, on right: 53
switch_clause (69)
    on left: 68 69, on right: 71
switch_clause_list (70)
    on left: 70 71, on right: 67 71
return_statement (71)
    on left: 72, on right: 54
for_statement (72)
    on left: 73, on right: 57
for_condition_statement (73)
    on left: 74 75 76, on right: 73
expression (74)
    on left: 77 78 79 80 81 82 83, on right: 60 64 65 66 67 74 75 84
    85 89 90
expression_list (75)
    on left: 84 85, on right: 47 48 61 68 72 85
composite_literal (76)
    on left: 86, on right: 83
element_list (77)
    on left: 87 88, on right: 86 88
keyed_element (78)
    on left: 89 90, on right: 87 88
identifier_list (79)
    on left: 91 92, on right: 25 27 28 29 46 47 48 92


State 0

    0 $accept: . start $end

    FUNC  shift, and go to state 1
    TYPE  shift, and go to state 2
    VAR   shift, and go to state 3

    start                       go to state 4
    top_level_declaration       go to state 5
    top_level_declaration_list  go to state 6
    function_declaration        go to state 7
    declaration                 go to state 8
    type_decl                   go to state 9
    var_decl                    go to state 10


State 1

   35 function_declaration: FUNC . IDENTIFIER function_signature block

    IDENTIFIER  shift, and go to state 11


State 2

   38 type_decl: TYPE . type_spec
   39          | TYPE . '(' type_spec_list ')'

    IDENTIFIER  shift, and go to state 12
    '('         shift, and go to state 13

    type_spec  go to state 14


State 3

   44 var_decl: VAR . var_spec
   45         | VAR . '(' var_spec_list ')'

    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    var_spec         go to state 17
    identifier_list  go to state 18


State 4

    0 $accept: start . $end

    $end  shift, and go to state 19


State 5

   33 top_level_declaration_list: top_level_declaration .
   34                           | top_level_declaration . ';' top_level_declaration_list

    ';'  shift, and go to state 20

    $default  reduce using rule 33 (top_level_declaration_list)


State 6

    1 start: top_level_declaration_list .

    $default  reduce using rule 1 (start)


State 7

   32 top_level_declaration: function_declaration .

    $default  reduce using rule 32 (top_level_declaration)


State 8

   31 top_level_declaration: declaration .

    $default  reduce using rule 31 (top_level_declaration)


State 9

   36 declaration: type_decl .

    $default  reduce using rule 36 (declaration)


State 10

   37 declaration: var_decl .

    $default  reduce using rule 37 (declaration)


State 11

   35 function_declaration: FUNC IDENTIFIER . function_signature block

    '('  shift, and go to state 21

    function_signature   go to state 22
    function_parameters  go to state 23


State 12

   40 type_spec: IDENTIFIER . '=' type
   41          | IDENTIFIER . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35
    '='         shift, and go to state 36

    type          go to state 37
    literal_type  go to state 38


State 13

   39 type_decl: TYPE '(' . type_spec_list ')'

    IDENTIFIER  shift, and go to state 12

    type_spec       go to state 39
    type_spec_list  go to state 40


State 14

   38 type_decl: TYPE type_spec .

    $default  reduce using rule 38 (type_decl)


State 15

   91 identifier_list: IDENTIFIER .
   92                | IDENTIFIER . ',' identifier_list

    ','  shift, and go to state 41

    $default  reduce using rule 91 (identifier_list)


State 16

   45 var_decl: VAR '(' . var_spec_list ')'

    IDENTIFIER  shift, and go to state 15

    var_spec         go to state 42
    var_spec_list    go to state 43
    identifier_list  go to state 18


State 17

   44 var_decl: VAR var_spec .

    $default  reduce using rule 44 (var_decl)


State 18

   46 var_spec: identifier_list . type
   47         | identifier_list . type '=' expression_list
   48         | identifier_list . '=' expression_list

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35
    '='         shift, and go to state 44

    type          go to state 45
    literal_type  go to state 38


State 19

    0 $accept: start $end .

    $default  accept


State 20

   34 top_level_declaration_list: top_level_declaration ';' . top_level_declaration_list

    FUNC  shift, and go to state 1
    TYPE  shift, and go to state 2
    VAR   shift, and go to state 3

    top_level_declaration       go to state 5
    top_level_declaration_list  go to state 46
    function_declaration        go to state 7
    declaration                 go to state 8
    type_decl                   go to state 9
    var_decl                    go to state 10


State 21

   21 function_parameters: '(' . ')'
   22                    | '(' . function_parameter_list ')'
   23                    | '(' . function_parameter_list ',' ')'

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 47
    '('         shift, and go to state 33
    ')'         shift, and go to state 48
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type                     go to state 49
    literal_type             go to state 38
    function_parameter_list  go to state 50
    identifier_list          go to state 51


State 22

   35 function_declaration: FUNC IDENTIFIER function_signature . block

    '{'  shift, and go to state 52

    block  go to state 53


State 23

   17 function_signature: function_parameters . function_result

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 54
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    $default  reduce using rule 18 (function_result)

    type                 go to state 55
    literal_type         go to state 38
    function_result      go to state 56
    function_parameters  go to state 57


State 24

    3 type: BOOL .

    $default  reduce using rule 3 (type)


State 25

    4 type: INT .

    $default  reduce using rule 4 (type)


State 26

    5 type: FLOAT32 .

    $default  reduce using rule 5 (type)


State 27

    6 type: RUNE .

    $default  reduce using rule 6 (type)


State 28

    7 type: STRING .

    $default  reduce using rule 7 (type)


State 29

   14 literal_type: STRUCT . '{' struct_field_decls '}'

    '{'  shift, and go to state 58


State 30

    9 type: FUNC . function_signature

    '('  shift, and go to state 21

    function_signature   go to state 59
    function_parameters  go to state 23


State 31

   15 literal_type: MAP . '[' type ']' type

    '['  shift, and go to state 60


State 32

   11 literal_type: IDENTIFIER .

    $default  reduce using rule 11 (literal_type)


State 33

    2 type: '(' . type ')'

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 61
    literal_type  go to state 38


State 34

    8 type: '*' . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 62
    literal_type  go to state 38


State 35

   12 literal_type: '[' . array_length ']' type
   13             | '[' . ']' type

    INT_LITERAL  shift, and go to state 63
    ']'          shift, and go to state 64

    array_length  go to state 65


State 36

   40 type_spec: IDENTIFIER '=' . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 66
    literal_type  go to state 38


State 37

   41 type_spec: IDENTIFIER type .

    $default  reduce using rule 41 (type_spec)


State 38

   10 type: literal_type .

    $default  reduce using rule 10 (type)


State 39

   42 type_spec_list: type_spec . ';'
   43               | type_spec . ';' type_spec_list

    ';'  shift, and go to state 67


State 40

   39 type_decl: TYPE '(' type_spec_list . ')'

    ')'  shift, and go to state 68


State 41

   92 identifier_list: IDENTIFIER ',' . identifier_list

    IDENTIFIER  shift, and go to state 15

    identifier_list  go to state 69


State 42

   49 var_spec_list: var_spec . ';'
   50              | var_spec . ';' var_spec_list

    ';'  shift, and go to state 70


State 43

   45 var_decl: VAR '(' var_spec_list . ')'

    ')'  shift, and go to state 71


State 44

   48 var_spec: identifier_list '=' . expression_list

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 72
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    literal_type       go to state 78
    expression         go to state 79
    expression_list    go to state 80
    composite_literal  go to state 81


State 45

   46 var_spec: identifier_list type .
   47         | identifier_list type . '=' expression_list

    '='  shift, and go to state 82

    $default  reduce using rule 46 (var_spec)


State 46

   34 top_level_declaration_list: top_level_declaration ';' top_level_declaration_list .

    $default  reduce using rule 34 (top_level_declaration_list)


State 47

   11 literal_type: IDENTIFIER .
   91 identifier_list: IDENTIFIER .
   92                | IDENTIFIER . ',' identifier_list

    ','  shift, and go to state 41

    ')'       reduce using rule 11 (literal_type)
    ','       [reduce using rule 11 (literal_type)]
    $default  reduce using rule 91 (identifier_list)


State 48

   21 function_parameters: '(' ')' .

    $default  reduce using rule 21 (function_parameters)


State 49

   24 function_parameter_list: type .
   26                        | type . ',' function_parameter_list

    ','  shift, and go to state 83

    ','       [reduce using rule 24 (function_parameter_list)]
    $default  reduce using rule 24 (function_parameter_list)


State 50

   22 function_parameters: '(' function_parameter_list . ')'
   23                    | '(' function_parameter_list . ',' ')'

    ')'  shift, and go to state 84
    ','  shift, and go to state 85


State 51

   25 function_parameter_list: identifier_list . type
   27                        | identifier_list . type ',' function_parameter_list

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 86
    literal_type  go to state 38


State 52

   30 block: '{' . statement_list '}'

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    TYPE            shift, and go to state 2
    VAR             shift, and go to state 3
    IF              shift, and go to state 87
    SWITCH          shift, and go to state 88
    RETURN          shift, and go to state 89
    BREAK           shift, and go to state 90
    CONTINUE        shift, and go to state 91
    FOR             shift, and go to state 92
    IDENTIFIER      shift, and go to state 72
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    '}'       reduce using rule 62 (statement_list)
    $default  reduce using rule 59 (simple_statement)

    literal_type             go to state 78
    declaration              go to state 93
    type_decl                go to state 9
    var_decl                 go to state 10
    statement                go to state 94
    simple_statement         go to state 95
    statement_list           go to state 96
    if_statement             go to state 97
    switch_statement         go to state 98
    return_statement         go to state 99
    for_statement            go to state 100
    for_condition_statement  go to state 101
    expression               go to state 102
    expression_list          go to state 103
    composite_literal        go to state 81


State 53

   35 function_declaration: FUNC IDENTIFIER function_signature block .

    $default  reduce using rule 35 (function_declaration)


State 54

    2 type: '(' . type ')'
   21 function_parameters: '(' . ')'
   22                    | '(' . function_parameter_list ')'
   23                    | '(' . function_parameter_list ',' ')'

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 47
    '('         shift, and go to state 33
    ')'         shift, and go to state 48
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type                     go to state 104
    literal_type             go to state 38
    function_parameter_list  go to state 50
    identifier_list          go to state 51


State 55

   20 function_result: type .

    $default  reduce using rule 20 (function_result)


State 56

   17 function_signature: function_parameters function_result .

    $default  reduce using rule 17 (function_signature)


State 57

   19 function_result: function_parameters .

    $default  reduce using rule 19 (function_result)


State 58

   14 literal_type: STRUCT '{' . struct_field_decls '}'

    IDENTIFIER  shift, and go to state 15

    struct_field_decls  go to state 105
    identifier_list     go to state 106


State 59

    9 type: FUNC function_signature .

    $default  reduce using rule 9 (type)


State 60

   15 literal_type: MAP '[' . type ']' type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 107
    literal_type  go to state 38


State 61

    2 type: '(' type . ')'

    ')'  shift, and go to state 108


State 62

    8 type: '*' type .

    $default  reduce using rule 8 (type)


State 63

   16 array_length: INT_LITERAL .

    $default  reduce using rule 16 (array_length)


State 64

   13 literal_type: '[' ']' . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 109
    literal_type  go to state 38


State 65

   12 literal_type: '[' array_length . ']' type

    ']'  shift, and go to state 110


State 66

   40 type_spec: IDENTIFIER '=' type .

    $default  reduce using rule 40 (type_spec)


State 67

   42 type_spec_list: type_spec ';' .
   43               | type_spec ';' . type_spec_list

    IDENTIFIER  shift, and go to state 12

    $default  reduce using rule 42 (type_spec_list)

    type_spec       go to state 39
    type_spec_list  go to state 111


State 68

   39 type_decl: TYPE '(' type_spec_list ')' .

    $default  reduce using rule 39 (type_decl)


State 69

   92 identifier_list: IDENTIFIER ',' identifier_list .

    $default  reduce using rule 92 (identifier_list)


State 70

   49 var_spec_list: var_spec ';' .
   50              | var_spec ';' . var_spec_list

    IDENTIFIER  shift, and go to state 15

    $default  reduce using rule 49 (var_spec_list)

    var_spec         go to state 42
    var_spec_list    go to state 112
    identifier_list  go to state 18


State 71

   45 var_decl: VAR '(' var_spec_list ')' .

    $default  reduce using rule 45 (var_decl)


State 72

   11 literal_type: IDENTIFIER .
   82 expression: IDENTIFIER .

    '{'       reduce using rule 11 (literal_type)
    '{'       [reduce using rule 82 (expression)]
    $default  reduce using rule 82 (expression)


State 73

   78 expression: INT_LITERAL .

    $default  reduce using rule 78 (expression)


State 74

   79 expression: FLOAT_LITERAL .

    $default  reduce using rule 79 (expression)


State 75

   77 expression: BOOL_LITERAL .

    $default  reduce using rule 77 (expression)


State 76

   80 expression: RUNE_LITERAL .

    $default  reduce using rule 80 (expression)


State 77

   81 expression: STRING_LITERAL .

    $default  reduce using rule 81 (expression)


State 78

   86 composite_literal: literal_type . '{' element_list '}'

    '{'  shift, and go to state 113


State 79

   84 expression_list: expression .
   85                | expression . ',' expression_list

    ','  shift, and go to state 114

    $default  reduce using rule 84 (expression_list)


State 80

   48 var_spec: identifier_list '=' expression_list .

    $default  reduce using rule 48 (var_spec)


State 81

   83 expression: composite_literal .

    $default  reduce using rule 83 (expression)


State 82

   47 var_spec: identifier_list type '=' . expression_list

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 72
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    literal_type       go to state 78
    expression         go to state 79
    expression_list    go to state 115
    composite_literal  go to state 81


State 83

   26 function_parameter_list: type ',' . function_parameter_list

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 47
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type                     go to state 49
    literal_type             go to state 38
    function_parameter_list  go to state 116
    identifier_list          go to state 51


State 84

   22 function_parameters: '(' function_parameter_list ')' .

    $default  reduce using rule 22 (function_parameters)


State 85

   23 function_parameters: '(' function_parameter_list ',' . ')'

    ')'  shift, and go to state 117


State 86

   25 function_parameter_list: identifier_list type .
   27                        | identifier_list type . ',' function_parameter_list

    ','  shift, and go to state 118

    ','       [reduce using rule 25 (function_parameter_list)]
    $default  reduce using rule 25 (function_parameter_list)


State 87

   64 if_statement: IF . expression block
   65             | IF . expression block ELSE if_statement
   66             | IF . expression block ELSE block

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 72
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    literal_type       go to state 78
    expression         go to state 119
    composite_literal  go to state 81


State 88

   67 switch_statement: SWITCH . expression '{' switch_clause_list '}'

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 72
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    literal_type       go to state 78
    expression         go to state 120
    composite_literal  go to state 81


State 89

   72 return_statement: RETURN . expression_list

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 72
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    literal_type       go to state 78
    expression         go to state 79
    expression_list    go to state 121
    composite_literal  go to state 81


State 90

   55 statement: BREAK .

    $default  reduce using rule 55 (statement)


State 91

   56 statement: CONTINUE .

    $default  reduce using rule 56 (statement)


State 92

   74 for_condition_statement: FOR . simple_statement ';' expression ';' simple_statement block
   75                        | FOR . expression block
   76                        | FOR . block

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 72
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35
    '{'             shift, and go to state 52

    $default  reduce using rule 59 (simple_statement)

    literal_type       go to state 78
    block              go to state 122
    simple_statement   go to state 123
    expression         go to state 124
    expression_list    go to state 103
    composite_literal  go to state 81


State 93

   58 statement: declaration .

    $default  reduce using rule 58 (statement)


State 94

   63 statement_list: statement . ';' statement_list

    ';'  shift, and go to state 125


State 95

   51 statement: simple_statement .

    $default  reduce using rule 51 (statement)


State 96

   30 block: '{' statement_list . '}'

    '}'  shift, and go to state 126


State 97

   52 statement: if_statement .

    $default  reduce using rule 52 (statement)


State 98

   53 statement: switch_statement .

    $default  reduce using rule 53 (statement)


State 99

   54 statement: return_statement .

    $default  reduce using rule 54 (statement)


State 100

   57 statement: for_statement .

    $default  reduce using rule 57 (statement)


State 101

   73 for_statement: for_condition_statement .

    $default  reduce using rule 73 (for_statement)


State 102

   60 simple_statement: expression .
   84 expression_list: expression .
   85                | expression . ',' expression_list

    ','  shift, and go to state 114

    '='       reduce using rule 84 (expression_list)
    $default  reduce using rule 60 (simple_statement)


State 103

   61 simple_statement: expression_list . '=' expression_list

    '='  shift, and go to state 127


State 104

    2 type: '(' type . ')'
   24 function_parameter_list: type .
   26                        | type . ',' function_parameter_list

    ')'  shift, and go to state 108
    ','  shift, and go to state 83

    ')'  [reduce using rule 24 (function_parameter_list)]
    ','  [reduce using rule 24 (function_parameter_list)]


State 105

   14 literal_type: STRUCT '{' struct_field_decls . '}'

    '}'  shift, and go to state 128


State 106

   28 struct_field_decls: identifier_list . type ';'
   29                   | identifier_list . type ';' struct_field_decls

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 129
    literal_type  go to state 38


State 107

   15 literal_type: MAP '[' type . ']' type

    ']'  shift, and go to state 130


State 108

    2 type: '(' type ')' .

    $default  reduce using rule 2 (type)


State 109

   13 literal_type: '[' ']' type .

    $default  reduce using rule 13 (literal_type)


State 110

   12 literal_type: '[' array_length ']' . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 131
    literal_type  go to state 38


State 111

   43 type_spec_list: type_spec ';' type_spec_list .

    $default  reduce using rule 43 (type_spec_list)


State 112

   50 var_spec_list: var_spec ';' var_spec_list .

    $default  reduce using rule 50 (var_spec_list)


State 113

   86 composite_literal: literal_type '{' . element_list '}'

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 132
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    literal_type       go to state 78
    expression         go to state 133
    composite_literal  go to state 81
    element_list       go to state 134
    keyed_element      go to state 135


State 114

   85 expression_list: expression ',' . expression_list

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 72
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    literal_type       go to state 78
    expression         go to state 79
    expression_list    go to state 136
    composite_literal  go to state 81


State 115

   47 var_spec: identifier_list type '=' expression_list .

    $default  reduce using rule 47 (var_spec)


State 116

   26 function_parameter_list: type ',' function_parameter_list .

    $default  reduce using rule 26 (function_parameter_list)


State 117

   23 function_parameters: '(' function_parameter_list ',' ')' .

    $default  reduce using rule 23 (function_parameters)


State 118

   27 function_parameter_list: identifier_list type ',' . function_parameter_list

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 47
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type                     go to state 49
    literal_type             go to state 38
    function_parameter_list  go to state 137
    identifier_list          go to state 51


State 119

   64 if_statement: IF expression . block
   65             | IF expression . block ELSE if_statement
   66             | IF expression . block ELSE block

    '{'  shift, and go to state 52

    block  go to state 138


State 120

   67 switch_statement: SWITCH expression . '{' switch_clause_list '}'

    '{'  shift, and go to state 139


State 121

   72 return_statement: RETURN expression_list .

    $default  reduce using rule 72 (return_statement)


State 122

   76 for_condition_statement: FOR block .

    $default  reduce using rule 76 (for_condition_statement)


State 123

   74 for_condition_statement: FOR simple_statement . ';' expression ';' simple_statement block

    ';'  shift, and go to state 140


State 124

   60 simple_statement: expression .
   75 for_condition_statement: FOR expression . block
   84 expression_list: expression .
   85                | expression . ',' expression_list

    '{'  shift, and go to state 52
    ','  shift, and go to state 114

    '='       reduce using rule 84 (expression_list)
    $default  reduce using rule 60 (simple_statement)

    block  go to state 141


State 125

   63 statement_list: statement ';' . statement_list

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    TYPE            shift, and go to state 2
    VAR             shift, and go to state 3
    IF              shift, and go to state 87
    SWITCH          shift, and go to state 88
    RETURN          shift, and go to state 89
    BREAK           shift, and go to state 90
    CONTINUE        shift, and go to state 91
    FOR             shift, and go to state 92
    IDENTIFIER      shift, and go to state 72
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    ';'       reduce using rule 59 (simple_statement)
    $default  reduce using rule 62 (statement_list)

    literal_type             go to state 78
    declaration              go to state 93
    type_decl                go to state 9
    var_decl                 go to state 10
    statement                go to state 94
    simple_statement         go to state 95
    statement_list           go to state 142
    if_statement             go to state 97
    switch_statement         go to state 98
    return_statement         go to state 99
    for_statement            go to state 100
    for_condition_statement  go to state 101
    expression               go to state 102
    expression_list          go to state 103
    composite_literal        go to state 81


State 126

   30 block: '{' statement_list '}' .

    $default  reduce using rule 30 (block)


State 127

   61 simple_statement: expression_list '=' . expression_list

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 72
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    literal_type       go to state 78
    expression         go to state 79
    expression_list    go to state 143
    composite_literal  go to state 81


State 128

   14 literal_type: STRUCT '{' struct_field_decls '}' .

    $default  reduce using rule 14 (literal_type)


State 129

   28 struct_field_decls: identifier_list type . ';'
   29                   | identifier_list type . ';' struct_field_decls

    ';'  shift, and go to state 144


State 130

   15 literal_type: MAP '[' type ']' . type

    BOOL        shift, and go to state 24
    INT         shift, and go to state 25
    FLOAT32     shift, and go to state 26
    RUNE        shift, and go to state 27
    STRING      shift, and go to state 28
    STRUCT      shift, and go to state 29
    FUNC        shift, and go to state 30
    MAP         shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    '('         shift, and go to state 33
    '*'         shift, and go to state 34
    '['         shift, and go to state 35

    type          go to state 145
    literal_type  go to state 38


State 131

   12 literal_type: '[' array_length ']' type .

    $default  reduce using rule 12 (literal_type)


State 132

   11 literal_type: IDENTIFIER .
   82 expression: IDENTIFIER .
   89 keyed_element: IDENTIFIER . ':' expression

    ':'  shift, and go to state 146

    '{'       reduce using rule 11 (literal_type)
    $default  reduce using rule 82 (expression)


State 133

   90 keyed_element: expression .

    $default  reduce using rule 90 (keyed_element)


State 134

   86 composite_literal: literal_type '{' element_list . '}'

    '}'  shift, and go to state 147


State 135

   87 element_list: keyed_element .
   88             | keyed_element . ',' element_list

    ','  shift, and go to state 148

    $default  reduce using rule 87 (element_list)


State 136

   85 expression_list: expression ',' expression_list .

    $default  reduce using rule 85 (expression_list)


State 137

   27 function_parameter_list: identifier_list type ',' function_parameter_list .

    $default  reduce using rule 27 (function_parameter_list)


State 138

   64 if_statement: IF expression block .
   65             | IF expression block . ELSE if_statement
   66             | IF expression block . ELSE block

    ELSE  shift, and go to state 149

    $default  reduce using rule 64 (if_statement)


State 139

   67 switch_statement: SWITCH expression '{' . switch_clause_list '}'

    CASE     shift, and go to state 150
    DEFAULT  shift, and go to state 151

    $default  reduce using rule 70 (switch_clause_list)

    switch_clause       go to state 152
    switch_clause_list  go to state 153


State 140

   74 for_condition_statement: FOR simple_statement ';' . expression ';' simple_statement block

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 72
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    literal_type       go to state 78
    expression         go to state 154
    composite_literal  go to state 81


State 141

   75 for_condition_statement: FOR expression block .

    $default  reduce using rule 75 (for_condition_statement)


State 142

   63 statement_list: statement ';' statement_list .

    $default  reduce using rule 63 (statement_list)


State 143

   61 simple_statement: expression_list '=' expression_list .

    $default  reduce using rule 61 (simple_statement)


State 144

   28 struct_field_decls: identifier_list type ';' .
   29                   | identifier_list type ';' . struct_field_decls

    IDENTIFIER  shift, and go to state 15

    $default  reduce using rule 28 (struct_field_decls)

    struct_field_decls  go to state 155
    identifier_list     go to state 106


State 145

   15 literal_type: MAP '[' type ']' type .

    $default  reduce using rule 15 (literal_type)


State 146

   89 keyed_element: IDENTIFIER ':' . expression

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 72
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    literal_type       go to state 78
    expression         go to state 156
    composite_literal  go to state 81


State 147

   86 composite_literal: literal_type '{' element_list '}' .

    $default  reduce using rule 86 (composite_literal)


State 148

   88 element_list: keyed_element ',' . element_list

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 132
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    literal_type       go to state 78
    expression         go to state 133
    composite_literal  go to state 81
    element_list       go to state 157
    keyed_element      go to state 135


State 149

   65 if_statement: IF expression block ELSE . if_statement
   66             | IF expression block ELSE . block

    IF   shift, and go to state 87
    '{'  shift, and go to state 52

    block         go to state 158
    if_statement  go to state 159


State 150

   68 switch_clause: CASE . expression_list ':' statement_list

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 72
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    literal_type       go to state 78
    expression         go to state 79
    expression_list    go to state 160
    composite_literal  go to state 81


State 151

   69 switch_clause: DEFAULT . ':' statement_list

    ':'  shift, and go to state 161


State 152

   71 switch_clause_list: switch_clause . switch_clause_list

    CASE     shift, and go to state 150
    DEFAULT  shift, and go to state 151

    $default  reduce using rule 70 (switch_clause_list)

    switch_clause       go to state 152
    switch_clause_list  go to state 162


State 153

   67 switch_statement: SWITCH expression '{' switch_clause_list . '}'

    '}'  shift, and go to state 163


State 154

   74 for_condition_statement: FOR simple_statement ';' expression . ';' simple_statement block

    ';'  shift, and go to state 164


State 155

   29 struct_field_decls: identifier_list type ';' struct_field_decls .

    $default  reduce using rule 29 (struct_field_decls)


State 156

   89 keyed_element: IDENTIFIER ':' expression .

    $default  reduce using rule 89 (keyed_element)


State 157

   88 element_list: keyed_element ',' element_list .

    $default  reduce using rule 88 (element_list)


State 158

   66 if_statement: IF expression block ELSE block .

    $default  reduce using rule 66 (if_statement)


State 159

   65 if_statement: IF expression block ELSE if_statement .

    $default  reduce using rule 65 (if_statement)


State 160

   68 switch_clause: CASE expression_list . ':' statement_list

    ':'  shift, and go to state 165


State 161

   69 switch_clause: DEFAULT ':' . statement_list

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    TYPE            shift, and go to state 2
    VAR             shift, and go to state 3
    IF              shift, and go to state 87
    SWITCH          shift, and go to state 88
    RETURN          shift, and go to state 89
    BREAK           shift, and go to state 90
    CONTINUE        shift, and go to state 91
    FOR             shift, and go to state 92
    IDENTIFIER      shift, and go to state 72
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    ';'       reduce using rule 59 (simple_statement)
    $default  reduce using rule 62 (statement_list)

    literal_type             go to state 78
    declaration              go to state 93
    type_decl                go to state 9
    var_decl                 go to state 10
    statement                go to state 94
    simple_statement         go to state 95
    statement_list           go to state 166
    if_statement             go to state 97
    switch_statement         go to state 98
    return_statement         go to state 99
    for_statement            go to state 100
    for_condition_statement  go to state 101
    expression               go to state 102
    expression_list          go to state 103
    composite_literal        go to state 81


State 162

   71 switch_clause_list: switch_clause switch_clause_list .

    $default  reduce using rule 71 (switch_clause_list)


State 163

   67 switch_statement: SWITCH expression '{' switch_clause_list '}' .

    $default  reduce using rule 67 (switch_statement)


State 164

   74 for_condition_statement: FOR simple_statement ';' expression ';' . simple_statement block

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    IDENTIFIER      shift, and go to state 72
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    $default  reduce using rule 59 (simple_statement)

    literal_type       go to state 78
    simple_statement   go to state 167
    expression         go to state 102
    expression_list    go to state 103
    composite_literal  go to state 81


State 165

   68 switch_clause: CASE expression_list ':' . statement_list

    STRUCT          shift, and go to state 29
    MAP             shift, and go to state 31
    TYPE            shift, and go to state 2
    VAR             shift, and go to state 3
    IF              shift, and go to state 87
    SWITCH          shift, and go to state 88
    RETURN          shift, and go to state 89
    BREAK           shift, and go to state 90
    CONTINUE        shift, and go to state 91
    FOR             shift, and go to state 92
    IDENTIFIER      shift, and go to state 72
    INT_LITERAL     shift, and go to state 73
    FLOAT_LITERAL   shift, and go to state 74
    BOOL_LITERAL    shift, and go to state 75
    RUNE_LITERAL    shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    '['             shift, and go to state 35

    ';'       reduce using rule 59 (simple_statement)
    $default  reduce using rule 62 (statement_list)

    literal_type             go to state 78
    declaration              go to state 93
    type_decl                go to state 9
    var_decl                 go to state 10
    statement                go to state 94
    simple_statement         go to state 95
    statement_list           go to state 168
    if_statement             go to state 97
    switch_statement         go to state 98
    return_statement         go to state 99
    for_statement            go to state 100
    for_condition_statement  go to state 101
    expression               go to state 102
    expression_list          go to state 103
    composite_literal        go to state 81


State 166

   69 switch_clause: DEFAULT ':' statement_list .

    $default  reduce using rule 69 (switch_clause)


State 167

   74 for_condition_statement: FOR simple_statement ';' expression ';' simple_statement . block

    '{'  shift, and go to state 52

    block  go to state 169


State 168

   68 switch_clause: CASE expression_list ':' statement_list .

    $default  reduce using rule 68 (switch_clause)


State 169

   74 for_condition_statement: FOR simple_statement ';' expression ';' simple_statement block .

    $default  reduce using rule 74 (for_condition_statement)
