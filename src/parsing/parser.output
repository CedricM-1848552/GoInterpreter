Terminals unused in grammar

   COMPLEX64
   BYTE


State 72 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce
State 94 conflicts: 1 shift/reduce
State 95 conflicts: 2 shift/reduce


Grammar

    0 $accept: start $end

    1 start: block

    2 type: IDENTIFIER
    3     | '(' type ')'
    4     | BOOL
    5     | INT
    6     | FLOAT32
    7     | RUNE
    8     | STRING
    9     | '[' array_length ']' type
   10     | '[' ']' type
   11     | STRUCT '{' struct_field_decls '}'
   12     | '*' type
   13     | FUNC function_signature
   14     | MAP '[' type ']' type

   15 array_length: INT_LITERAL

   16 function_signature: function_parameters function_result

   17 function_result: /* empty */
   18                | function_parameters
   19                | type

   20 function_parameters: '(' ')'
   21                    | '(' function_parameter_list ')'
   22                    | '(' function_parameter_list ',' ')'

   23 function_parameter_list: type
   24                        | identifier_list type
   25                        | type ',' function_parameter_list
   26                        | identifier_list type ',' function_parameter_list

   27 struct_field_decls: identifier_list type ';'
   28                   | identifier_list type ';' struct_field_decls

   29 block: '{' statement_list '}'

   30 statement: type_decl
   31          | var_decl

   32 statement_list: statement ';'
   33               | statement ';' statement_list

   34 type_decl: TYPE type_spec
   35          | TYPE '(' type_spec_list ')'

   36 type_spec: IDENTIFIER '=' type
   37          | IDENTIFIER type

   38 type_spec_list: type_spec ';'
   39               | type_spec ';' type_spec_list

   40 var_decl: VAR var_spec
   41         | VAR '(' var_spec_list ')'
   42         | identifier_list SHORT_VAR_DECL expression_list

   43 var_spec: identifier_list type
   44         | identifier_list type '=' expression_list
   45         | identifier_list '=' expression_list

   46 var_spec_list: var_spec ';'
   47              | var_spec ';' var_spec_list

   48 expression: BOOL_LITERAL
   49           | INT_LITERAL
   50           | FLOAT_LITERAL
   51           | RUNE_LITERAL
   52           | STRING_LITERAL

   53 expression_list: expression
   54                | expression ',' expression_list

   55 identifier_list: IDENTIFIER
   56                | IDENTIFIER ',' identifier_list


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 20 21 22 35 41
')' (41) 3 20 21 22 35 41
'*' (42) 12
',' (44) 22 25 26 54 56
';' (59) 27 28 32 33 38 39 46 47
'=' (61) 36 44 45
'[' (91) 9 10 14
']' (93) 9 10 14
'{' (123) 11 29
'}' (125) 11 29
error (256)
BOOL (258) 4
INT (259) 5
FLOAT32 (260) 6
COMPLEX64 (261)
BYTE (262)
RUNE (263) 7
STRING (264) 8
STRUCT (265) 11
FUNC (266) 13
MAP (267) 14
TYPE (268) 34 35
VAR (269) 40 41
SHORT_VAR_DECL (270) 42
IDENTIFIER (271) 2 36 37 55 56
INT_LITERAL (272) 15 49
FLOAT_LITERAL (273) 50
BOOL_LITERAL (274) 48
RUNE_LITERAL (275) 51
STRING_LITERAL (276) 52


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
start (33)
    on left: 1, on right: 0
type (34)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14, on right: 3 9 10 12 14
    19 23 24 25 26 27 28 36 37 43 44
array_length (35)
    on left: 15, on right: 9
function_signature (36)
    on left: 16, on right: 13
function_result (37)
    on left: 17 18 19, on right: 16
function_parameters (38)
    on left: 20 21 22, on right: 16 18
function_parameter_list (39)
    on left: 23 24 25 26, on right: 21 22 25 26
struct_field_decls (40)
    on left: 27 28, on right: 11 28
block (41)
    on left: 29, on right: 1
statement (42)
    on left: 30 31, on right: 32 33
statement_list (43)
    on left: 32 33, on right: 29 33
type_decl (44)
    on left: 34 35, on right: 30
type_spec (45)
    on left: 36 37, on right: 34 38 39
type_spec_list (46)
    on left: 38 39, on right: 35 39
var_decl (47)
    on left: 40 41 42, on right: 31
var_spec (48)
    on left: 43 44 45, on right: 40 46 47
var_spec_list (49)
    on left: 46 47, on right: 41 47
expression (50)
    on left: 48 49 50 51 52, on right: 53 54
expression_list (51)
    on left: 53 54, on right: 42 44 45 54
identifier_list (52)
    on left: 55 56, on right: 24 26 27 28 42 43 44 45 56


State 0

    0 $accept: . start $end

    '{'  shift, and go to state 1

    start  go to state 2
    block  go to state 3


State 1

   29 block: '{' . statement_list '}'

    TYPE        shift, and go to state 4
    VAR         shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    statement        go to state 7
    statement_list   go to state 8
    type_decl        go to state 9
    var_decl         go to state 10
    identifier_list  go to state 11


State 2

    0 $accept: start . $end

    $end  shift, and go to state 12


State 3

    1 start: block .

    $default  reduce using rule 1 (start)


State 4

   34 type_decl: TYPE . type_spec
   35          | TYPE . '(' type_spec_list ')'

    IDENTIFIER  shift, and go to state 13
    '('         shift, and go to state 14

    type_spec  go to state 15


State 5

   40 var_decl: VAR . var_spec
   41         | VAR . '(' var_spec_list ')'

    IDENTIFIER  shift, and go to state 6
    '('         shift, and go to state 16

    var_spec         go to state 17
    identifier_list  go to state 18


State 6

   55 identifier_list: IDENTIFIER .
   56                | IDENTIFIER . ',' identifier_list

    ','  shift, and go to state 19

    $default  reduce using rule 55 (identifier_list)


State 7

   32 statement_list: statement . ';'
   33               | statement . ';' statement_list

    ';'  shift, and go to state 20


State 8

   29 block: '{' statement_list . '}'

    '}'  shift, and go to state 21


State 9

   30 statement: type_decl .

    $default  reduce using rule 30 (statement)


State 10

   31 statement: var_decl .

    $default  reduce using rule 31 (statement)


State 11

   42 var_decl: identifier_list . SHORT_VAR_DECL expression_list

    SHORT_VAR_DECL  shift, and go to state 22


State 12

    0 $accept: start $end .

    $default  accept


State 13

   36 type_spec: IDENTIFIER . '=' type
   37          | IDENTIFIER . type

    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    FLOAT32     shift, and go to state 25
    RUNE        shift, and go to state 26
    STRING      shift, and go to state 27
    STRUCT      shift, and go to state 28
    FUNC        shift, and go to state 29
    MAP         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 32
    '['         shift, and go to state 33
    '*'         shift, and go to state 34
    '='         shift, and go to state 35

    type  go to state 36


State 14

   35 type_decl: TYPE '(' . type_spec_list ')'

    IDENTIFIER  shift, and go to state 13

    type_spec       go to state 37
    type_spec_list  go to state 38


State 15

   34 type_decl: TYPE type_spec .

    $default  reduce using rule 34 (type_decl)


State 16

   41 var_decl: VAR '(' . var_spec_list ')'

    IDENTIFIER  shift, and go to state 6

    var_spec         go to state 39
    var_spec_list    go to state 40
    identifier_list  go to state 18


State 17

   40 var_decl: VAR var_spec .

    $default  reduce using rule 40 (var_decl)


State 18

   43 var_spec: identifier_list . type
   44         | identifier_list . type '=' expression_list
   45         | identifier_list . '=' expression_list

    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    FLOAT32     shift, and go to state 25
    RUNE        shift, and go to state 26
    STRING      shift, and go to state 27
    STRUCT      shift, and go to state 28
    FUNC        shift, and go to state 29
    MAP         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 32
    '['         shift, and go to state 33
    '*'         shift, and go to state 34
    '='         shift, and go to state 41

    type  go to state 42


State 19

   56 identifier_list: IDENTIFIER ',' . identifier_list

    IDENTIFIER  shift, and go to state 6

    identifier_list  go to state 43


State 20

   32 statement_list: statement ';' .
   33               | statement ';' . statement_list

    TYPE        shift, and go to state 4
    VAR         shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 32 (statement_list)

    statement        go to state 7
    statement_list   go to state 44
    type_decl        go to state 9
    var_decl         go to state 10
    identifier_list  go to state 11


State 21

   29 block: '{' statement_list '}' .

    $default  reduce using rule 29 (block)


State 22

   42 var_decl: identifier_list SHORT_VAR_DECL . expression_list

    INT_LITERAL     shift, and go to state 45
    FLOAT_LITERAL   shift, and go to state 46
    BOOL_LITERAL    shift, and go to state 47
    RUNE_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49

    expression       go to state 50
    expression_list  go to state 51


State 23

    4 type: BOOL .

    $default  reduce using rule 4 (type)


State 24

    5 type: INT .

    $default  reduce using rule 5 (type)


State 25

    6 type: FLOAT32 .

    $default  reduce using rule 6 (type)


State 26

    7 type: RUNE .

    $default  reduce using rule 7 (type)


State 27

    8 type: STRING .

    $default  reduce using rule 8 (type)


State 28

   11 type: STRUCT . '{' struct_field_decls '}'

    '{'  shift, and go to state 52


State 29

   13 type: FUNC . function_signature

    '('  shift, and go to state 53

    function_signature   go to state 54
    function_parameters  go to state 55


State 30

   14 type: MAP . '[' type ']' type

    '['  shift, and go to state 56


State 31

    2 type: IDENTIFIER .

    $default  reduce using rule 2 (type)


State 32

    3 type: '(' . type ')'

    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    FLOAT32     shift, and go to state 25
    RUNE        shift, and go to state 26
    STRING      shift, and go to state 27
    STRUCT      shift, and go to state 28
    FUNC        shift, and go to state 29
    MAP         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 32
    '['         shift, and go to state 33
    '*'         shift, and go to state 34

    type  go to state 57


State 33

    9 type: '[' . array_length ']' type
   10     | '[' . ']' type

    INT_LITERAL  shift, and go to state 58
    ']'          shift, and go to state 59

    array_length  go to state 60


State 34

   12 type: '*' . type

    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    FLOAT32     shift, and go to state 25
    RUNE        shift, and go to state 26
    STRING      shift, and go to state 27
    STRUCT      shift, and go to state 28
    FUNC        shift, and go to state 29
    MAP         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 32
    '['         shift, and go to state 33
    '*'         shift, and go to state 34

    type  go to state 61


State 35

   36 type_spec: IDENTIFIER '=' . type

    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    FLOAT32     shift, and go to state 25
    RUNE        shift, and go to state 26
    STRING      shift, and go to state 27
    STRUCT      shift, and go to state 28
    FUNC        shift, and go to state 29
    MAP         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 32
    '['         shift, and go to state 33
    '*'         shift, and go to state 34

    type  go to state 62


State 36

   37 type_spec: IDENTIFIER type .

    $default  reduce using rule 37 (type_spec)


State 37

   38 type_spec_list: type_spec . ';'
   39               | type_spec . ';' type_spec_list

    ';'  shift, and go to state 63


State 38

   35 type_decl: TYPE '(' type_spec_list . ')'

    ')'  shift, and go to state 64


State 39

   46 var_spec_list: var_spec . ';'
   47              | var_spec . ';' var_spec_list

    ';'  shift, and go to state 65


State 40

   41 var_decl: VAR '(' var_spec_list . ')'

    ')'  shift, and go to state 66


State 41

   45 var_spec: identifier_list '=' . expression_list

    INT_LITERAL     shift, and go to state 45
    FLOAT_LITERAL   shift, and go to state 46
    BOOL_LITERAL    shift, and go to state 47
    RUNE_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49

    expression       go to state 50
    expression_list  go to state 67


State 42

   43 var_spec: identifier_list type .
   44         | identifier_list type . '=' expression_list

    '='  shift, and go to state 68

    $default  reduce using rule 43 (var_spec)


State 43

   56 identifier_list: IDENTIFIER ',' identifier_list .

    $default  reduce using rule 56 (identifier_list)


State 44

   33 statement_list: statement ';' statement_list .

    $default  reduce using rule 33 (statement_list)


State 45

   49 expression: INT_LITERAL .

    $default  reduce using rule 49 (expression)


State 46

   50 expression: FLOAT_LITERAL .

    $default  reduce using rule 50 (expression)


State 47

   48 expression: BOOL_LITERAL .

    $default  reduce using rule 48 (expression)


State 48

   51 expression: RUNE_LITERAL .

    $default  reduce using rule 51 (expression)


State 49

   52 expression: STRING_LITERAL .

    $default  reduce using rule 52 (expression)


State 50

   53 expression_list: expression .
   54                | expression . ',' expression_list

    ','  shift, and go to state 69

    $default  reduce using rule 53 (expression_list)


State 51

   42 var_decl: identifier_list SHORT_VAR_DECL expression_list .

    $default  reduce using rule 42 (var_decl)


State 52

   11 type: STRUCT '{' . struct_field_decls '}'

    IDENTIFIER  shift, and go to state 6

    struct_field_decls  go to state 70
    identifier_list     go to state 71


State 53

   20 function_parameters: '(' . ')'
   21                    | '(' . function_parameter_list ')'
   22                    | '(' . function_parameter_list ',' ')'

    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    FLOAT32     shift, and go to state 25
    RUNE        shift, and go to state 26
    STRING      shift, and go to state 27
    STRUCT      shift, and go to state 28
    FUNC        shift, and go to state 29
    MAP         shift, and go to state 30
    IDENTIFIER  shift, and go to state 72
    '('         shift, and go to state 32
    ')'         shift, and go to state 73
    '['         shift, and go to state 33
    '*'         shift, and go to state 34

    type                     go to state 74
    function_parameter_list  go to state 75
    identifier_list          go to state 76


State 54

   13 type: FUNC function_signature .

    $default  reduce using rule 13 (type)


State 55

   16 function_signature: function_parameters . function_result

    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    FLOAT32     shift, and go to state 25
    RUNE        shift, and go to state 26
    STRING      shift, and go to state 27
    STRUCT      shift, and go to state 28
    FUNC        shift, and go to state 29
    MAP         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 77
    '['         shift, and go to state 33
    '*'         shift, and go to state 34

    $default  reduce using rule 17 (function_result)

    type                 go to state 78
    function_result      go to state 79
    function_parameters  go to state 80


State 56

   14 type: MAP '[' . type ']' type

    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    FLOAT32     shift, and go to state 25
    RUNE        shift, and go to state 26
    STRING      shift, and go to state 27
    STRUCT      shift, and go to state 28
    FUNC        shift, and go to state 29
    MAP         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 32
    '['         shift, and go to state 33
    '*'         shift, and go to state 34

    type  go to state 81


State 57

    3 type: '(' type . ')'

    ')'  shift, and go to state 82


State 58

   15 array_length: INT_LITERAL .

    $default  reduce using rule 15 (array_length)


State 59

   10 type: '[' ']' . type

    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    FLOAT32     shift, and go to state 25
    RUNE        shift, and go to state 26
    STRING      shift, and go to state 27
    STRUCT      shift, and go to state 28
    FUNC        shift, and go to state 29
    MAP         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 32
    '['         shift, and go to state 33
    '*'         shift, and go to state 34

    type  go to state 83


State 60

    9 type: '[' array_length . ']' type

    ']'  shift, and go to state 84


State 61

   12 type: '*' type .

    $default  reduce using rule 12 (type)


State 62

   36 type_spec: IDENTIFIER '=' type .

    $default  reduce using rule 36 (type_spec)


State 63

   38 type_spec_list: type_spec ';' .
   39               | type_spec ';' . type_spec_list

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 38 (type_spec_list)

    type_spec       go to state 37
    type_spec_list  go to state 85


State 64

   35 type_decl: TYPE '(' type_spec_list ')' .

    $default  reduce using rule 35 (type_decl)


State 65

   46 var_spec_list: var_spec ';' .
   47              | var_spec ';' . var_spec_list

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 46 (var_spec_list)

    var_spec         go to state 39
    var_spec_list    go to state 86
    identifier_list  go to state 18


State 66

   41 var_decl: VAR '(' var_spec_list ')' .

    $default  reduce using rule 41 (var_decl)


State 67

   45 var_spec: identifier_list '=' expression_list .

    $default  reduce using rule 45 (var_spec)


State 68

   44 var_spec: identifier_list type '=' . expression_list

    INT_LITERAL     shift, and go to state 45
    FLOAT_LITERAL   shift, and go to state 46
    BOOL_LITERAL    shift, and go to state 47
    RUNE_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49

    expression       go to state 50
    expression_list  go to state 87


State 69

   54 expression_list: expression ',' . expression_list

    INT_LITERAL     shift, and go to state 45
    FLOAT_LITERAL   shift, and go to state 46
    BOOL_LITERAL    shift, and go to state 47
    RUNE_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49

    expression       go to state 50
    expression_list  go to state 88


State 70

   11 type: STRUCT '{' struct_field_decls . '}'

    '}'  shift, and go to state 89


State 71

   27 struct_field_decls: identifier_list . type ';'
   28                   | identifier_list . type ';' struct_field_decls

    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    FLOAT32     shift, and go to state 25
    RUNE        shift, and go to state 26
    STRING      shift, and go to state 27
    STRUCT      shift, and go to state 28
    FUNC        shift, and go to state 29
    MAP         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 32
    '['         shift, and go to state 33
    '*'         shift, and go to state 34

    type  go to state 90


State 72

    2 type: IDENTIFIER .
   55 identifier_list: IDENTIFIER .
   56                | IDENTIFIER . ',' identifier_list

    ','  shift, and go to state 19

    ')'       reduce using rule 2 (type)
    ','       [reduce using rule 2 (type)]
    $default  reduce using rule 55 (identifier_list)


State 73

   20 function_parameters: '(' ')' .

    $default  reduce using rule 20 (function_parameters)


State 74

   23 function_parameter_list: type .
   25                        | type . ',' function_parameter_list

    ','  shift, and go to state 91

    ','       [reduce using rule 23 (function_parameter_list)]
    $default  reduce using rule 23 (function_parameter_list)


State 75

   21 function_parameters: '(' function_parameter_list . ')'
   22                    | '(' function_parameter_list . ',' ')'

    ')'  shift, and go to state 92
    ','  shift, and go to state 93


State 76

   24 function_parameter_list: identifier_list . type
   26                        | identifier_list . type ',' function_parameter_list

    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    FLOAT32     shift, and go to state 25
    RUNE        shift, and go to state 26
    STRING      shift, and go to state 27
    STRUCT      shift, and go to state 28
    FUNC        shift, and go to state 29
    MAP         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 32
    '['         shift, and go to state 33
    '*'         shift, and go to state 34

    type  go to state 94


State 77

    3 type: '(' . type ')'
   20 function_parameters: '(' . ')'
   21                    | '(' . function_parameter_list ')'
   22                    | '(' . function_parameter_list ',' ')'

    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    FLOAT32     shift, and go to state 25
    RUNE        shift, and go to state 26
    STRING      shift, and go to state 27
    STRUCT      shift, and go to state 28
    FUNC        shift, and go to state 29
    MAP         shift, and go to state 30
    IDENTIFIER  shift, and go to state 72
    '('         shift, and go to state 32
    ')'         shift, and go to state 73
    '['         shift, and go to state 33
    '*'         shift, and go to state 34

    type                     go to state 95
    function_parameter_list  go to state 75
    identifier_list          go to state 76


State 78

   19 function_result: type .

    $default  reduce using rule 19 (function_result)


State 79

   16 function_signature: function_parameters function_result .

    $default  reduce using rule 16 (function_signature)


State 80

   18 function_result: function_parameters .

    $default  reduce using rule 18 (function_result)


State 81

   14 type: MAP '[' type . ']' type

    ']'  shift, and go to state 96


State 82

    3 type: '(' type ')' .

    $default  reduce using rule 3 (type)


State 83

   10 type: '[' ']' type .

    $default  reduce using rule 10 (type)


State 84

    9 type: '[' array_length ']' . type

    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    FLOAT32     shift, and go to state 25
    RUNE        shift, and go to state 26
    STRING      shift, and go to state 27
    STRUCT      shift, and go to state 28
    FUNC        shift, and go to state 29
    MAP         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 32
    '['         shift, and go to state 33
    '*'         shift, and go to state 34

    type  go to state 97


State 85

   39 type_spec_list: type_spec ';' type_spec_list .

    $default  reduce using rule 39 (type_spec_list)


State 86

   47 var_spec_list: var_spec ';' var_spec_list .

    $default  reduce using rule 47 (var_spec_list)


State 87

   44 var_spec: identifier_list type '=' expression_list .

    $default  reduce using rule 44 (var_spec)


State 88

   54 expression_list: expression ',' expression_list .

    $default  reduce using rule 54 (expression_list)


State 89

   11 type: STRUCT '{' struct_field_decls '}' .

    $default  reduce using rule 11 (type)


State 90

   27 struct_field_decls: identifier_list type . ';'
   28                   | identifier_list type . ';' struct_field_decls

    ';'  shift, and go to state 98


State 91

   25 function_parameter_list: type ',' . function_parameter_list

    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    FLOAT32     shift, and go to state 25
    RUNE        shift, and go to state 26
    STRING      shift, and go to state 27
    STRUCT      shift, and go to state 28
    FUNC        shift, and go to state 29
    MAP         shift, and go to state 30
    IDENTIFIER  shift, and go to state 72
    '('         shift, and go to state 32
    '['         shift, and go to state 33
    '*'         shift, and go to state 34

    type                     go to state 74
    function_parameter_list  go to state 99
    identifier_list          go to state 76


State 92

   21 function_parameters: '(' function_parameter_list ')' .

    $default  reduce using rule 21 (function_parameters)


State 93

   22 function_parameters: '(' function_parameter_list ',' . ')'

    ')'  shift, and go to state 100


State 94

   24 function_parameter_list: identifier_list type .
   26                        | identifier_list type . ',' function_parameter_list

    ','  shift, and go to state 101

    ','       [reduce using rule 24 (function_parameter_list)]
    $default  reduce using rule 24 (function_parameter_list)


State 95

    3 type: '(' type . ')'
   23 function_parameter_list: type .
   25                        | type . ',' function_parameter_list

    ')'  shift, and go to state 82
    ','  shift, and go to state 91

    ')'  [reduce using rule 23 (function_parameter_list)]
    ','  [reduce using rule 23 (function_parameter_list)]


State 96

   14 type: MAP '[' type ']' . type

    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    FLOAT32     shift, and go to state 25
    RUNE        shift, and go to state 26
    STRING      shift, and go to state 27
    STRUCT      shift, and go to state 28
    FUNC        shift, and go to state 29
    MAP         shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '('         shift, and go to state 32
    '['         shift, and go to state 33
    '*'         shift, and go to state 34

    type  go to state 102


State 97

    9 type: '[' array_length ']' type .

    $default  reduce using rule 9 (type)


State 98

   27 struct_field_decls: identifier_list type ';' .
   28                   | identifier_list type ';' . struct_field_decls

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 27 (struct_field_decls)

    struct_field_decls  go to state 103
    identifier_list     go to state 71


State 99

   25 function_parameter_list: type ',' function_parameter_list .

    $default  reduce using rule 25 (function_parameter_list)


State 100

   22 function_parameters: '(' function_parameter_list ',' ')' .

    $default  reduce using rule 22 (function_parameters)


State 101

   26 function_parameter_list: identifier_list type ',' . function_parameter_list

    BOOL        shift, and go to state 23
    INT         shift, and go to state 24
    FLOAT32     shift, and go to state 25
    RUNE        shift, and go to state 26
    STRING      shift, and go to state 27
    STRUCT      shift, and go to state 28
    FUNC        shift, and go to state 29
    MAP         shift, and go to state 30
    IDENTIFIER  shift, and go to state 72
    '('         shift, and go to state 32
    '['         shift, and go to state 33
    '*'         shift, and go to state 34

    type                     go to state 74
    function_parameter_list  go to state 104
    identifier_list          go to state 76


State 102

   14 type: MAP '[' type ']' type .

    $default  reduce using rule 14 (type)


State 103

   28 struct_field_decls: identifier_list type ';' struct_field_decls .

    $default  reduce using rule 28 (struct_field_decls)


State 104

   26 function_parameter_list: identifier_list type ',' function_parameter_list .

    $default  reduce using rule 26 (function_parameter_list)
